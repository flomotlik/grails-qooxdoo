{"attributes": {"fullName": "qx.Interface", "packageName": "qx", "isStatic": true, "type": "bootstrap", "name": "Interface"}, "type": "class", "children": [{"attributes": {"text": "<p>This class is used to define interfaces (similar to Java interfaces).</p>\n\n<p>See the description of the {@link #define} method how an interface is\ndefined.</p>"}, "type": "desc"}, {"type": "methods-static", "children": [{"attributes": {"access": "private", "isStatic": true, "name": "__assertEvents"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>class to check interface for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "iface"}, "type": "param", "children": [{"attributes": {"text": "<p>the interface to verify</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Interface"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert events</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__assertMembers"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>The object, which contains the methods</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>class of the object</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "iface"}, "type": "param", "children": [{"attributes": {"text": "<p>the interface to verify</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Interface"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "wrap"}, "type": "param", "children": [{"attributes": {"text": "<p>wrap functions required by interface to\n    check parameters etc.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert members</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__assertProperties"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>class to check interface for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "iface"}, "type": "param", "children": [{"attributes": {"text": "<p>the interface to verify</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Interface"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert properties</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__isPropertyMethod"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>The current class.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "methodName"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the method.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper to detect if the method will be generated by the\nproperty system.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>true, if the method will be generated by the property\n  system.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "assert"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>class to check interface for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "iface"}, "type": "param", "children": [{"attributes": {"text": "<p>the interface to verify</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Interface"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "wrap"}, "type": "param", "children": [{"attributes": {"text": "<p>wrap functions required by interface to\n    check parameters etc.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if an interface is implemented by a class</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertObject"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to check interface for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "iface"}, "type": "param", "children": [{"attributes": {"text": "<p>The interface to verify</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Interface"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Asserts that the given object implements all the methods defined in the\ninterface. This method throws an exception if the object does not\nimplement the interface.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "define"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the interface</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "config"}, "type": "param", "children": [{"attributes": {"text": "<p>Interface definition structure. The configuration map has the following keys:\n  <table>\n    <tr><th>Name</th><th>Type</th><th>Description</th></tr>\n    <tr><th>extend</th><td>Interface |\nInterface[]</td><td>Single interface or array of interfaces this interface inherits from.</td></tr>\n    <tr><th>members</th><td>Map</td><td>Map of members of the interface.</td></tr>\n    <tr><th>statics</th><td>Map</td><td>\n        Map of statics of the interface. The statics will not get copied into the target class.\n        This is the same behaviour as statics in mixins ({@link qx.Mixin#define}).\n    </td></tr>\n    <tr><th>properties</th><td>Map</td><td>Map of properties and their definitions.</td></tr>\n    <tr><th>events</th><td>Map</td><td>Map of event names and the corresponding event class name.</td></tr>\n  </table></p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Define a new interface. Interface definitions look much like class definitions.</p>\n\n<p>The main difference is that the bodies of functions defined in <code>members</code>\nand <code>statics</code> are called before the original function with the\nsame arguments. This can be used to check the passed arguments. If the\nchecks fail, an exception should be thrown. It is convenient to use the\nmethod defined in {@link qx.core.MAssert} to check the arguments.</p>\n\n<p>In the <code>build</code> version the checks are omitted.</p>\n\n<p>For properties only the names are required so the value of the properties\ncan be empty maps.</p>\n\n<p>Example:</p>\n\n<pre class=\"javascript\">\nqx.Interface.define(\"name\",\n{\n  extend: [SuperInterfaces],\n\n  statics:\n  {\n    PI : 3.14\n  },\n\n  properties: {\"color\": {}, \"name\": {} },\n\n  members:\n  {\n    meth1: function() {},\n    meth2: function(a, b) { this.assertArgumentsCount(arguments, 2, 2); },\n    meth3: function(c) { this.assertInterface(c.constructor, qx.some.Interface); }\n  },\n\n  events :\n  {\n    keydown : \"qx.event.type.KeySequence\"\n  }\n});\n</pre>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "flatten"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "[]", "name": "ifaces"}, "type": "param", "children": [{"attributes": {"text": "<p>List of interfaces to be resolved</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Interface", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Generates a list of all interfaces including their super interfaces\n(resolved recursively)</p>"}, "type": "desc"}]}, {"attributes": {"access": "internal", "isInternal": true, "isStatic": true, "name": "genericToString"}, "type": "method", "children": [{"attributes": {"text": "<p>This method will be attached to all interface to return\na nice identifier for them.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The interface identifier</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getByName"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>class name to resolve</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns an interface by name</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the class</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getTotalNumber"}, "type": "method", "children": [{"attributes": {"text": "<p>Determine the number of interfaces which are defined</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the number of classes</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "isDefined"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Interface name to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Determine if interface exists</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>true if interface exists</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}]}