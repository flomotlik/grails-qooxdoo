{"attributes": {"fullName": "qx.bom.Blocker", "packageName": "qx.bom", "type": "class", "name": "Blocker", "superClass": "qx.core.Object"}, "type": "class", "children": [{"attributes": {"text": "<p>This class provides an unified blocker which offers three different modes.</p>\n\n<p><strong>Blocker modes</strong></p>\n\n<ul>\n<li>block the whole document</li>\n<li>block the content of an element</li>\n<li>act as an underlying blocker for an element to shim native controls</li>\n</ul>\n\n<p>The third mode is mainly necessary for IE browsers.</p>\n\n<p>The first mode is the easiest to use. Just use the {@link #block} method\nwithout a parameter.\nThe second and third mode are taking a <span class=\"caps\">DOM</span> element as parameter for the\n{@link #block} method. Additionally one need to setup the &#8220;zIndex&#8221; value\ncorrectly to get the right results (see at {@link #setBlockerZIndex} method).</p>\n\n<p>The zIndex value defaults to the value &#8220;10000&#8221;. Either you set an appropiate\nvalue for the blocker zIndex or for your <span class=\"caps\">DOM</span> element to block. If you want\nto block the content of your <span class=\"caps\">DOM</span> element it has to have at least the zIndex\nvalue of &#8220;10001&#8221; with default blocker values.</p>"}, "type": "desc"}, {"type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "overriddenFrom": "qx.core.Object", "isCtor": true, "name": "ctor"}, "type": "method"}]}, {"type": "methods", "children": [{"attributes": {"access": "private", "name": "__calculateStyles"}, "type": "method", "children": [{"attributes": {"text": "<p>Calculates the necessary styles for the blocker element.\nEither the values of the document or of the element to block are used.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Object with necessary style infos</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__init"}, "type": "method", "children": [{"attributes": {"text": "<p>Setups the elements and registers a &#8220;resize&#8221; event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__isWholeDocumentBlockTarget"}, "type": "method", "children": [{"attributes": {"text": "<p>Checks whether the whole document is be blocked.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>block mode</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__onResize"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>event instance</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Reacts on window resize and adapts the new size for the blocker element\nif the whole document is blocked.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__removeBlocker"}, "type": "method", "children": [{"attributes": {"text": "<p>Remove the blocker elements.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__resizeBlocker"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "dimension"}, "type": "param", "children": [{"attributes": {"text": "<p>Map with width and height as keys</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Does the resizing for blocker element and blocker iframe element (IE)</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__setupBlockerElement"}, "type": "method", "children": [{"attributes": {"text": "<p>Create blocker element and set initial styles.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__setupIframeElement"}, "type": "method", "children": [{"attributes": {"text": "<p>Create iframe blocker element and set initial styles.</p>\n\n<p>Needed to block native form elements\n// see: <a href=\"http://www.macridesweb.com/oltest/IframeShim.html\">http://www.macridesweb.com/oltest/IframeShim.html</a></p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__styleAndInsertBlocker"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "styles"}, "type": "param", "children": [{"attributes": {"text": "<p>styles to apply</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Apply the given styles and inserts the blocker.</p>"}, "type": "desc"}]}, {"attributes": {"name": "block"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "null", "name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>If no element is given the whole document is blocked.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Blocks the whole document (if no parameter is given) or acts as an\nunderlying blocker for native controls.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getBlockerColor"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the current blocker color.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> color value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getBlockerElement"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the blocker element. Useful if the element should be animated.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getBlockerOpacity"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the blocker opacity value.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> opacity value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getBlockerZIndex"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the blocker zIndex value</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> zIndex value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isBlocked"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the blocker is already active.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Blocker active</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setBlockerColor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "color"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> color value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the color of the blocker element. Be sure to set also a suitable\nopacity value to get the desired result. {@see setBlockerOpacity}</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setBlockerOpacity"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "opacity"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> opacity value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the blocker opacity. Be sure to set also a suitable blocker color\nvalue to get the desired result. {@see setBlockerColor}</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setBlockerZIndex"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "zIndex"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> zIndex value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the zIndex of the blocker element. For most use cases you do not need\nto manipulate this value.</p>"}, "type": "desc"}]}, {"attributes": {"name": "unblock"}, "type": "method", "children": [{"attributes": {"text": "<p>Releases the blocking</p>"}, "type": "desc"}]}]}]}