{"attributes": {"isAbstract": true, "name": "History", "packageName": "qx.bom", "superClass": "qx.core.Object", "childClasses": "qx.bom.IframeHistory,qx.bom.NativeHistory", "fullName": "qx.bom.History", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>A helper for using the browser history in JavaScript Applications without\nreloading the main page.</p>\n\n<p>Adds entries to the browser history and fires a &#8220;request&#8221; event when one of\nthe entries was requested by the user (e.g. by clicking on the back button).</p>\n\n<p>This class is an abstract template class. Concrete implementations have to\nprovide implementations for the {@link #_readState} and {@link #_writeState}\nmethods.</p>\n\n<p>Browser history support is currently available for Internet Explorer 6/7,\nFirefox, Opera 9 and WebKit. Safari 2 and older are not yet supported.</p>\n\n<p>This module is based on the ideas behind the <span class=\"caps\">YUI</span> Browser History Manager\nby Julien Lecomte (Yahoo), which is described at\n<a href=\"http://yuiblog.com/blog/2007/02/21/browser-history-manager/\">http://yuiblog.com/blog/2007/02/21/browser-history-manager/</a>. The Yahoo\nimplementation can be found at <a href=\"http://developer.yahoo.com/yui/history\">http://developer.yahoo.com/yui/history</a>.\nThe original code is licensed under a <span class=\"caps\">BSD</span> license\n(<a href=\"http://developer.yahoo.com/yui/license.txt\">http://developer.yahoo.com/yui/license.txt</a>).</p>"}, "type": "desc"}, {"type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "overriddenFrom": "qx.core.Object", "isCtor": true, "name": "ctor"}, "type": "method"}]}, {"type": "events", "children": [{"attributes": {"name": "changeState"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #state}."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeTitle"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #title}."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "request"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired when the user moved in the history. The data property of the event\nholds the state, which was passed to {@link #addToHistory}.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"type": "constants", "children": [{"attributes": {"name": "SUPPORTS_HASH_CHANGE_EVENT"}, "type": "constant", "children": [{"attributes": {"text": "<p>Whether the browser supports the &#8216;hashchange&#8217; event natively.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"type": "methods-static", "children": [{"attributes": {"isStatic": true, "name": "getInstance"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the singleton instance of the history manager.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "History"}, "type": "entry"}]}]}]}]}, {"type": "methods", "children": [{"attributes": {"access": "protected", "apply": "qx.bom.History#state", "name": "_applyState"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>state</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyState}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.bom.History#title", "name": "_applyTitle"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "title"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>title</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyTitle}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_decode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The fragment identifier</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Decodes a fragment identifier into a string</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The decoded fragment identifier</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_encode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The string to encode</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Encodes the state value into a format suitable as fragment identifier.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The encoded string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_getHash"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the fragment identifier of the top window <span class=\"caps\">URL</span>. For gecko browsers we\nhave to use a regular expression to avoid encoding problems.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the fragment identifier</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_onHistoryLoad"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "state"}, "type": "param", "children": [{"attributes": {"text": "<p>new state of the history</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Called on changes to the history using the browser buttons.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_readState"}, "type": "method", "children": [{"attributes": {"text": "<p>Browser dependent function to read the current state of the history</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>current state of the browser history</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_setHash"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>the fragment identifier</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the fragment identifier of the window <span class=\"caps\">URL</span></p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_setInitialState"}, "type": "method", "children": [{"attributes": {"text": "<p>Populates the &#8216;state&#8217; property with the initial state value</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_writeState"}, "type": "method", "children": [{"attributes": {"text": "<p>Save a state into the browser history.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "addToHistory"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "state"}, "type": "param", "children": [{"attributes": {"text": "<p>a string representing the state of the\n         application. This command will be delivered in the data property of\n         the &#8220;request&#8221; event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "newTitle"}, "type": "param", "children": [{"attributes": {"text": "<p>the page title to set after the history entry\n         is done. This title should represent the new state of the application.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds an entry to the browser history.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getState", "fromProperty": "state"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>state</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #state}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>state</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTimeoutInterval"}, "type": "method", "children": [{"type": "deprecated", "children": [{"attributes": {"text": "<p>This property has been deprecated. The history manager now\n    uses {@link qx.event.Idle} for polling.</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Interval for the timer, which periodically checks the browser history state\nin milliseconds.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>interval in milliseconds.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTitle", "fromProperty": "title"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>title</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #title}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>title</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initState", "fromProperty": "state"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>state</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>state</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #state}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initTitle", "fromProperty": "title"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>title</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>title</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #title}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "navigateBack"}, "type": "method", "children": [{"attributes": {"text": "<p>Navigates back in the browser history.\nSimulates a back button click.</p>"}, "type": "desc"}]}, {"attributes": {"name": "navigateForward"}, "type": "method", "children": [{"attributes": {"text": "<p>Navigates forward in the browser history.\nSimulates a forward button click.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetState", "fromProperty": "state"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>state</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #state}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetTimeoutInterval"}, "type": "method", "children": [{"type": "deprecated", "children": [{"attributes": {"text": "<p>This property has been deprecated. The history manager now\n    uses {@link qx.event.Idle} for polling.</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Interval for the timer, which periodically checks the browser history state\nin milliseconds.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetTitle", "fromProperty": "title"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>title</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #title}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setState", "fromProperty": "state"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>state</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>state</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #state}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setTimeoutInterval"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>interval in milliseconds.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"type": "deprecated", "children": [{"attributes": {"text": "<p>This property has been deprecated. The history manager now\n    uses {@link qx.event.Idle} for polling.</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Interval for the timer, which periodically checks the browser history state\nin milliseconds.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setTitle", "fromProperty": "title"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>title</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>title</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #title}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"type": "properties", "children": [{"attributes": {"name": "state", "check": "String", "allowNull": "true", "propertyType": "new", "apply": "_applyState", "event": "changeState"}, "type": "property", "children": [{"attributes": {"text": "<p>Property holding the current state of the history.</p>"}, "type": "desc"}]}, {"attributes": {"name": "title", "check": "String", "allowNull": "true", "propertyType": "new", "apply": "_applyTitle", "event": "changeTitle"}, "type": "property", "children": [{"attributes": {"text": "<p>Property holding the current title</p>"}, "type": "desc"}]}]}]}