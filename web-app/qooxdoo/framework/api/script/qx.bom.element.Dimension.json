{"attributes": {"fullName": "qx.bom.element.Dimension", "packageName": "qx.bom.element", "isStatic": true, "type": "class", "name": "Dimension"}, "type": "class", "children": [{"attributes": {"text": "<p>Contains support for calculating dimensions of <span class=\"caps\">HTML</span> elements.</p>\n\n<p>We differ between the box (or border) size which is available via\n{@link #getWidth} and {@link #getHeight} and the content or scroll\nsizes which are available via {@link #getContentWidth} and\n{@link #getContentHeight}.</p>"}, "type": "desc"}, {"type": "methods-static", "children": [{"attributes": {"isStatic": true, "name": "getContentHeight"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>element to query</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the content height.</p>\n\n<p>The content height is basically the maximum\nheight used or the maximum height which can be used by the content. This\nexcludes all kind of styles of the element like borders, paddings, margins,\nand even scrollbars.</p>\n\n<p>Please note that with visible scrollbars the content height returned\nmay be larger than the box width returned via {@link #getWidth}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Computed content height</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getContentSize"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>element to query</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the rendered content size of the given element.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>map containing the content width and height of the element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getContentWidth"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>element to query</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the content width.</p>\n\n<p>The content width is basically the maximum\nwidth used or the maximum width which can be used by the content. This\nexcludes all kind of styles of the element like borders, paddings, margins,\nand even scrollbars.</p>\n\n<p>Please note that with visible scrollbars the content width returned\nmay be larger than the box width returned via {@link #getWidth}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Computed content width</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getHeight"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>element to query</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the rendered height of the given element.</p>\n\n<p>This is the visible height of the object, which need not to be identical\nto the height configured via <span class=\"caps\">CSS</span>. This highly depends on the current\nbox-sizing for the document and maybe even for the element.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>height of the element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getSize"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>element to query</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the rendered size of the given element.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>map containing the width and height of the element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getWidth"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>element to query</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the rendered width of the given element.</p>\n\n<p>This is the visible width of the object, which need not to be identical\nto the width configured via <span class=\"caps\">CSS</span>. This highly depends on the current\nbox-sizing for the document and maybe even for the element.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>width of the element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}]}]}