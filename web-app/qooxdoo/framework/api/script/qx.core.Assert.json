{"attributes": {"fullName": "qx.core.Assert", "packageName": "qx.core", "isStatic": true, "type": "bootstrap", "name": "Assert"}, "type": "class", "children": [{"attributes": {"text": "<p>A collection of assertions.</p>\n\n<p>These methods can be used to assert incoming parameters, return values, ...\nIf an assertion fails an {@link AssertionError} is thrown.</p>\n\n<p>Assertions are used in unit tests as well.</p>"}, "type": "desc"}, {"type": "methods-static", "children": [{"attributes": {"access": "private", "isStatic": true, "name": "__fail"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "comment"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails. This\n   message is provided by the user.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "msgvarargs"}, "type": "param", "children": [{"attributes": {"text": "<p>any number of parts of a message to show if assertion\n                        triggers. Each will be converted to a string and all\n                        parts will be concatenated. E. g. instead of\n                        &#8220;Got invalid value &#8221; + this.__toString(val) + &#8221;!!!!!&#8221;\n                        use\n                        &#8220;Got invalid value &#8221;, val, &#8221;!!!!!&#8221;\n                        (much better performance)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the condition evaluates to <code>true</code>. An\n{@link AssertionError} is thrown if otherwise.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__isQxInstance"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>The object to check.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "classname"}, "type": "param", "children": [{"attributes": {"text": "<p>The classname of the class as string.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal herlper for checking the instance of a qooxdoo object using the\nclassname.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__toString"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>any value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert an unknown value to a string to display in error messages</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>a string representation of the value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "assert"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "condition"}, "type": "param", "children": [{"attributes": {"text": "<p>Condition to check for. Must evaluate to\n   <code>true</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the condition evaluates to <code>true</code>.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertArgumentsCount"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "args"}, "type": "param", "children": [{"attributes": {"text": "<p>The <code>arguments<code> variable of a function</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}, {"attributes": {"name": "minCount"}, "type": "param", "children": [{"attributes": {"text": "<p>Minimal number of arguments</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "maxCount"}, "type": "param", "children": [{"attributes": {"text": "<p>Maximum number of arguments</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the number of arguments is within the given range</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertArray"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is an array.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertArrayEquals"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "expected"}, "type": "param", "children": [{"attributes": {"text": "<p>The expected array</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "found"}, "type": "param", "children": [{"attributes": {"text": "<p>The found array</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that both array have identical array items.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertBoolean"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is a boolean.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertCssColor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "expected"}, "type": "param", "children": [{"attributes": {"text": "<p>The expected color</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value represents the given <span class=\"caps\">CSS</span> color value. This method\nparses the color strings and compares the <span class=\"caps\">RGB</span> values. It is able to\nparse values supported by {@link qx.util.ColorUtil#stringToRgb}.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertElement"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is a <span class=\"caps\">DOM</span> element.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertEquals"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "expected"}, "type": "param", "children": [{"attributes": {"text": "<p>Reference value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "found"}, "type": "param", "children": [{"attributes": {"text": "<p>found value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that both values are equal. (Uses the equality operator\n<code>==</code>.)</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertEventFired"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>The object on which the event should be fired.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "event"}, "type": "param", "children": [{"attributes": {"text": "<p>The event which should be fired.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "invokeFunc"}, "type": "param", "children": [{"attributes": {"text": "<p>The function which will be invoked and which\n  fires the event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "listenerFunc"}, "type": "param", "children": [{"attributes": {"text": "<p>The function which will be invoked in the\n  listener. The function has one parameter called e which is the event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "\"\"", "name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shows if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that an event is fired.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertEventNotFired"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>The object on which the event should be fired.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "event"}, "type": "param", "children": [{"attributes": {"text": "<p>The event which should be fired.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "invokeFunc"}, "type": "param", "children": [{"attributes": {"text": "<p>The function which will be invoked and which\n  should not fire the event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shows if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that an event is not fired.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertException"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>function to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "Error", "name": "exception"}, "type": "param", "children": [{"attributes": {"text": "<p>Expected constructor of the exception.\n  The assertion fails if the raised exception is not an instance of the\n  parameter.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Error"}, "type": "entry"}]}]}, {"attributes": {"name": "re"}, "type": "param", "children": [{"attributes": {"text": "<p>The assertion fails if the error message does\n  not match this parameter</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "RegExp"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Asserts that the callback raises a matching exception.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertFalse"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Condition to check for. Must be identical to\n   <code>false</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is <code>false</code> (Identity check).</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertFunction"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is a function.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertIdentical"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "expected"}, "type": "param", "children": [{"attributes": {"text": "<p>Reference value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "found"}, "type": "param", "children": [{"attributes": {"text": "<p>found value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that both values are identical. (Uses the identity operator\n<code>===</code>.)</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertInArray"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "array"}, "type": "param", "children": [{"attributes": {"text": "<p>List of valid values</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is an item in the given array.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertInRange"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "min"}, "type": "param", "children": [{"attributes": {"text": "<p>lower bound</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "max"}, "type": "param", "children": [{"attributes": {"text": "<p>upper bound</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is inside the given range.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertInstance"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>The value must be an instance of this class</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is an instance of the given class.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertInteger"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is an integer.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertInterface"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "iface"}, "type": "param", "children": [{"attributes": {"text": "<p>The value must implement this interface</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value implements the given interface.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertJsonEquals"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "expected"}, "type": "param", "children": [{"attributes": {"text": "<p>The the expected value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "found"}, "type": "param", "children": [{"attributes": {"text": "<p>The found value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the first two arguments are equal, when serialized into\n<span class=\"caps\">JSON</span>.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertKeyInMap"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>Map, where the keys represent the valid values</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "map"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is a key in the given map.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertMap"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is a map either created using <code>new Object</code>\nor by using the object literal notation <code>{ ... }</code>.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertMatch"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>String, which should match the regular expression</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "re"}, "type": "param", "children": [{"attributes": {"text": "<p>Regular expression to match</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "RegExp"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the given string matches the regular expression</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertNotEquals"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "expected"}, "type": "param", "children": [{"attributes": {"text": "<p>Reference value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "found"}, "type": "param", "children": [{"attributes": {"text": "<p>found value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that both values are not equal. (Uses the not equality operator\n<code>!=</code>.)</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertNotIdentical"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "expected"}, "type": "param", "children": [{"attributes": {"text": "<p>Reference value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "found"}, "type": "param", "children": [{"attributes": {"text": "<p>found value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that both values are not identical. (Uses the not identity operator\n<code>!==</code>.)</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertNotNull"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is not <code>null</code>.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertNotUndefined"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is not <code>undefined</code>.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertNull"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is <code>null</code>.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertNumber"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is a number.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertObject"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is an object.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertPositiveInteger"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is an integer >= 0.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertPositiveNumber"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is a number >= 0.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertQxObject"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is an instance of {@link qx.core.Object}.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertQxWidget"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is an instance of {@link qx.ui.core.Widget}.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertRegExp"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is a regular expression.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertString"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is a string.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertTrue"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Condition to check for. Must be identical to\n   <code>true</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is <code>true</code> (Identity check).</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertType"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>expected type of the value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value has the given type using the <code>typeof</code>\noperator. Because the type is not always what it is supposed to be it is\nbetter to use more explicit checks like {@link #assertString} or\n{@link #assertArray}.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "assertUndefined"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Assert that the value is <code>undefined</code>.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "fail"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Message to be shown if the assertion fails.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Raise an {@link AssertionError}</p>"}, "type": "desc"}]}]}]}