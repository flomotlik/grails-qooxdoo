{"attributes": {"fullName": "qx.data.MBinding", "packageName": "qx.data", "type": "mixin", "name": "MBinding", "includer": "qx.core.Object"}, "type": "class", "children": [{"attributes": {"text": "<p>The data binding package is still under development so there will be changes\nto the <span class=\"caps\">API</span>. This Features is for texting purpose only.</p>"}, "type": "desc"}, {"type": "methods", "children": [{"attributes": {"isMixin": true, "name": "bind"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "sourcePropertyChain"}, "type": "param", "children": [{"attributes": {"text": "<p>The property chain which represents\n  the source property.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object which the source should\n  be bind to.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The property name of the target object.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>A map containing the options. See\n  {@link qx.data.SingleValueBinding#bind} for more\n  information.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>The bind method delegates the call to the\n{@link qx.data.SingleValueBinding#bind} function. As source, the current\nobject (this) will be used.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Returns the internal id for that binding. This can be used\n  for referencing the binding e.g. for removing. This is not an atomic\n  id so you can&#8217;t you use it as a hash-map index.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"type": "throws", "children": [{"attributes": {"text": "<p>If the event is no data event or\n  there is no property definition for object and property (source and\n  target).</p>", "type": "qx.core.AssertionError"}, "type": "desc"}]}]}, {"attributes": {"isMixin": true, "name": "getBindings"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns an array which lists all bindings for the object.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>An array of binding informations. Every binding\n  information is an array itself containing id, sourceObject, sourceEvent,\n  targetObject and targetProperty in that order.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "removeAllBindings"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes all bindings from the object.</p>"}, "type": "desc"}, {"type": "throws", "children": [{"attributes": {"text": "<p>If the object is not in the internal\n  registry of the bindings.</p>", "type": "qx.core.AssertionError"}, "type": "desc"}, {"attributes": {"text": "<p>If one of the bindings listed internally can not be\n  removed.</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"isMixin": true, "name": "removeBinding"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>The id of the binding.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the binding with the given id from the current object. The\nid hast to be the id returned by any of the bind functions.</p>"}, "type": "desc"}, {"type": "throws", "children": [{"attributes": {"text": "<p>If the binding could not be found.</p>", "type": "Error"}, "type": "desc"}]}]}]}]}