{"attributes": {"fullName": "qx.data.SingleValueBinding", "packageName": "qx.data", "isStatic": true, "type": "class", "name": "SingleValueBinding"}, "type": "class", "children": [{"attributes": {"text": "<p>The data binding package is still under development so there will be changes\nto the <span class=\"caps\">API</span>. This Features is for testing purpose only.</p>"}, "type": "desc"}, {"type": "constants", "children": [{"attributes": {"type": "Boolean", "name": "DEBUG_ON", "value": "false"}, "type": "constant", "children": [{"attributes": {"text": "<p>Static debug flag to enable log messages on every invoke of a listener</p>"}, "type": "desc"}]}]}, {"type": "methods-static", "children": [{"attributes": {"access": "private", "isStatic": true, "name": "__bindEventToProperty"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "sourceObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The source of the binding.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "sourceEvent"}, "type": "param", "children": [{"attributes": {"text": "<p>The event of the source object which could\n  be the change event in common but has to be an\n  {@link qx.event.type.Data} event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object which the source should\n  be bind to.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The property name of the target object.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>A map containing the options. See\n  {@link #bind} for more information.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "arrayIndex"}, "type": "param", "children": [{"attributes": {"text": "<p>The index of the given array if its an array\n  to bind.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper method which is actually doing all bindings. That means\nthat an event listener will be added to the source object which listens\nto the given event and invokes an set on the target property on the\ntargetObject.\nThis method does not store the binding in the internal reference store\nso it should <span class=\"caps\">NOT</span> be used from outside this class. For an outside usage,\nuse {@link #bind}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Returns the internal id for that binding. This can be used\n  for referencing the binding or e.g. for removing. This is not an atomic\n  id so you can&#8217;t you use it as a hash-map index. It&#8217;s the id which will\n  be returned by the {@link qx.core.Object#addListener} method.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"type": "throws", "children": [{"attributes": {"text": "<p>If the event is no data event or\n  there is no property definition for the target object and target\n  property.</p>", "type": "qx.core.AssertionError"}, "type": "desc"}]}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__chainListener"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>The current context for the listener.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event listener for the chaining of the properties.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__checkForArrayInPropertyChain"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "propertyNames"}, "type": "param", "children": [{"attributes": {"text": "<p>The array containing the property names.\n  Attention, this method can chang this parameter!!!</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks for an array element in the given property names and adapts the\narrays to fit the algorithm.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>An array containing the values of the array properties\n  corresponding to the property names.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__convertValue"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value which possibly should be converted.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The target object.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetPropertyChain"}, "type": "param", "children": [{"attributes": {"text": "<p>The property name of the target object.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>The options map which can includes the converter.\n  For a detailed information on the map, take a look at\n  {@link #bind}.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>This method takes the given value, checks if the user has given a\nconverter and converts the value to its target type. If no converter is\ngiven by the user, the {@link #__defaultConvertion} will try to convert\nthe value.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The converted value. If no conversion has been done, the\n  value property will be returned.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"type": "throws", "children": [{"attributes": {"text": "<p>If there is no property definition\n  of the given target object and target property.</p>", "type": "qx.core.AssertionError"}, "type": "desc"}]}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__defaultConvertion"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "data"}, "type": "param", "children": [{"attributes": {"text": "<p>The data to convert.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "targetCheck"}, "type": "param", "children": [{"attributes": {"text": "<p>The value of the check property. That usually\n  contains the target type.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Tries to convert the data to the type given in the targetCheck argument.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__getEventForProperty"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "sourceObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object to check.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "sourceProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the property.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method which tries to figure out if the given property on the\ngiven object does have a change event and if returns the name of it.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The name of the change event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"type": "throws", "children": [{"attributes": {"text": "<p>If there is no property definition of\n  the given object property pair.</p>", "type": "qx.core.AssertionError"}, "type": "desc"}]}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__getEventNameForProperty"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>The source where the property is stored.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "propertyname"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the property.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Tries to return a fitting event name to the given source object and\nproperty name. First, it assumes that the propertyname is a real property\nand therefore it checks the property definition for the event. The second\npossibility is to check if there is an event with the given name. The\nthird and last possibility checked is if there is an event which is named\nchange + propertyname. If this three possibilities fail, an error will be\nthrown.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The name of the corresponding property.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__getTargetFromChain"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object where the property chain\n  starts.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetPropertyChain"}, "type": "param", "children": [{"attributes": {"text": "<p>The names of the properties,\n  separated with a dot.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper-Function resolving the object on which the last property of the\nchain should be set.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The object on which the last property\n  should be set.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__resetTargetValue"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object where the property chain\n  starts.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetPropertyChain"}, "type": "param", "children": [{"attributes": {"text": "<p>The names of the properties,\n  separated with a dot.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Resets the value of the given target after resolving the target property\nchain.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__setInitialValue"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to set.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object which contains the target\n  property.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetPropertyChain"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the target property in the\n  target object.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>The options map perhaps containing the user defined\n  converter.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "sourceObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The shource object of the binding (\n  used for the onUpdate callback).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the given value to the target property. This method is used for\ninitially set the value.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__setTargetValue"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object where the property chain\n  starts.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetPropertyChain"}, "type": "param", "children": [{"attributes": {"text": "<p>The names of the properties,\n  separated with a dot.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to set.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the given value to the given target after resolving the\ntarget property chain.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__setUpTargetBinding"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "sourceObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The source of the binding.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "sourcePropertyChain"}, "type": "param", "children": [{"attributes": {"text": "<p>The property chain which represents\n  the source property.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object which the source should\n  be bind to.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetPropertyChain"}, "type": "param", "children": [{"attributes": {"text": "<p>The property name of the target\n  object.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>The options map perhaps containing the user defined\n  converter.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper for setting up the listening to the changes on the\ntarget side of the binding. Only works if the target property is a\nproperty chain</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>A map containing the listener ids and the targets.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__storeBinding"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>The listener id of the id for a deeper binding.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "sourceObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The source Object of the binding.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "sourceEvent"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the source event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The target object.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetProperty"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the property on the target\n  object.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>This method stores the given value as a binding in the internal structure\nof all bindings.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__updateTarget"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "sourceObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The source of the binding.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "sourcePropertyChain"}, "type": "param", "children": [{"attributes": {"text": "<p>The property chain which represents\n  the source property.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object which the source should\n  be bind to.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetPropertyChain"}, "type": "param", "children": [{"attributes": {"text": "<p>The property name of the target\n  object.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper for updating the target. Gets the current set data from the soure\nand set that on the target.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "bind"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "sourceObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The source of the binding.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "sourcePropertyChain"}, "type": "param", "children": [{"attributes": {"text": "<p>The property chain which represents\n  the source property.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "targetObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The object which the source should\n  be bind to.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "targetPropertyChain"}, "type": "param", "children": [{"attributes": {"text": "<p>The property chain to the target\n  object.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>A map containing the options.\n  <li>converter: A converter function which takes two parameters\n      and should return the converted value. The first parameter ist the\n      data so convert and the second one is the corresponding model\n      object, which is only set in case of the use of an controller.\n      If no conversion has been done, the given value should be\n      returned.</li>\n  <li>onUpdate: A callback function can be given here. This method will be\n      called if the binding was updated successful. There will be\n      three parameter you do get in that method call: the source object,\n      the target object and the data as third parameter.</li>\n  <li>onSetFail: A callback function can be given here. This method will\n      be called if the set of the value fails.</li></p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>The function is responsible for binding a source objects property to\na target objects property. Both properties have to have the usual qooxdoo\ngetter and setter. The source property also needs to fire change-events\non every change of its value.\nPlease keep in mind, that this binding is unidirectional. If you need\na binding in both directions, you have to use two of this bindings.</p>\n\n<p>It&#8217;s also possible to bind some kind of a hierarchy as a source. This\nmeans that you can separate the source properties with a dot and bind\nby that the object referenced to this property chain.\nExample with an object &#8216;a&#8217; which has object &#8216;b&#8217; stored in its &#8216;child&#8217;\nproperty. Object b has a string property named abc:</p>\n\n<pre>\nqx.data.SingleValueBinding.bind(a, \"child.abc\", textfield, \"value\");\n</pre>\n\n<p>In that case, if the property abc of b changes, the textfield will\nautomatically contain the new value. Also if the child of a changes, the\nnew value (abc of the new child) will be in the textfield.</p>\n\n<p>There is also a possibility of binding an array. Therefor the array\n{@link qx.data.IListData} is needed because this array has change events\nwhich the native does not. Imagine a qooxdoo object a which has a\nchildren property containing an array holding more of its own kind.\nEvery object has a name property as a string.</p>\n\n<pre>\nvar svb = qx.data.SingleValueBinding;\n// bind the first childs name of 'a' to a textfield\nsvb.bind(a, \"children[0].name\", textfield, \"value\");\n// bind the last childs name of 'a' to a textfield\nsvb.bind(a, \"children[last].name\", textfield2, \"value\");\n// also deeper bindinds are possible\nsvb.bind(a, \"children[0].children[0].name\", textfield3, \"value\");\n</pre>\n\n<p>As you can see in this example, the abc property of a&#8217;s b will be bound\nto the textfield. If now the value of b changed or even the a will get a\nnew b, the binding still shows the right value.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Returns the internal id for that binding. This can be used\n  for referencing the binding or e.g. for removing. This is not an atomic\n  id so you can&#8217;t you use it as a hash-map index.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"type": "throws", "children": [{"attributes": {"text": "<p>If the event is no data event or\n  there is no property definition for object and property (source and\n  target).</p>", "type": "qx.core.AssertionError"}, "type": "desc"}]}]}, {"attributes": {"isStatic": true, "name": "getAllBindings"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a map containing for every bound object an array of data binding\ninformation. The key of the map is the hashcode of the bound objects.\nEvery binding is represented by an array containing id, sourceObject,\nsourceEvent, targetObject and targetProperty.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Map containing all bindings.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getAllBindingsForObject"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>The object of which the bindings should\n  be returned.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns an array which lists all bindings.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>An array of binding informations. Every binding\n  information is an array itself containing id, sourceObject,\n  sourceEvent, targetObject and targetProperty in that order.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "removeAllBindings"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes all binding in the whole application. After that not a single\nbinding is left.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "removeAllBindingsForObject"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>The object of which the bindings should be\n  removed.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes all bindings for the given object.</p>"}, "type": "desc"}, {"type": "throws", "children": [{"attributes": {"text": "<p>If the object is not in the internal\n  registry of the bindings.</p>", "type": "qx.core.AssertionError"}, "type": "desc"}, {"attributes": {"text": "<p>If one of the bindings listed internally can not be\n  removed.</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"isStatic": true, "name": "removeBindingFromObject"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "sourceObject"}, "type": "param", "children": [{"attributes": {"text": "<p>The source object of the binding.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>The id of the binding.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the binding with the given id from the given sourceObject. The\nid hast to be the id returned by any of the bind functions.</p>"}, "type": "desc"}, {"type": "throws", "children": [{"attributes": {"text": "<p>If the binding could not be found.</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"isStatic": true, "name": "showAllBindingsInLog"}, "type": "method", "children": [{"attributes": {"text": "<p>Debug function which shows all bindings in the log console. To get only\none binding in the console use {@link #showBindingInLog}</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "showBindingInLog"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>the source of the binding.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>The id of the binding.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Debug function which shows some valuable information about the given\nbinding in console. For that it uses {@link qx.log.Logger}.</p>"}, "type": "desc"}]}]}]}