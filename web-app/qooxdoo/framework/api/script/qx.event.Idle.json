{"attributes": {"name": "Idle", "packageName": "qx.event", "superClass": "qx.core.Object", "isSingleton": true, "fullName": "qx.event.Idle", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>A generic singleton that fires an &#8220;interval&#8221; event all 100 miliseconds. It\ncan be used whenever one needs to run code periodically. The main purpose of\nthis class is reduce the number of timers.</p>"}, "type": "desc"}, {"type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "overriddenFrom": "qx.core.Object", "isCtor": true, "name": "ctor"}, "type": "method"}]}, {"type": "events", "children": [{"attributes": {"name": "interval"}, "type": "event", "children": [{"attributes": {"text": "<p>This event if fired each time the interval time has elapsed</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"type": "methods", "children": [{"attributes": {"access": "protected", "apply": "qx.event.Idle#timeoutInterval", "name": "_applyTimeoutInterval"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>timeoutInterval</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyTimeoutInterval}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_onInterval"}, "type": "method", "children": [{"attributes": {"text": "<p>Fires an &#8220;interval&#8221; event</p>"}, "type": "desc"}]}, {"attributes": {"name": "getTimeoutInterval", "fromProperty": "timeoutInterval"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>timeoutInterval</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #timeoutInterval}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>timeoutInterval</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initTimeoutInterval", "fromProperty": "timeoutInterval"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>timeoutInterval</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>timeoutInterval</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #timeoutInterval}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetTimeoutInterval", "fromProperty": "timeoutInterval"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>timeoutInterval</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #timeoutInterval}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setTimeoutInterval", "fromProperty": "timeoutInterval"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>timeoutInterval</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>timeoutInterval</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #timeoutInterval}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"type": "properties", "children": [{"attributes": {"check": "Number", "apply": "_applyTimeoutInterval", "defaultValue": "100", "name": "timeoutInterval", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Interval for the timer, which periodically fires the &#8220;interval&#8221; event,\nin milliseconds.</p>"}, "type": "desc"}]}]}, {"type": "methods-static", "children": [{"attributes": {"isStatic": true, "name": "getInstance"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a singleton instance of this class. On the first call the class\nis instantiated by calling the constructor with no arguments. All following\ncalls will return this instance.</p>\n\n<p>This method has been added by setting the &#8220;type&#8221; key in the class definition\n({@link qx.Class#define}) to &#8220;singleton&#8221;.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The singleton instance of this class.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.Idle"}, "type": "entry"}]}]}]}]}]}