{"attributes": {"name": "Element", "packageName": "qx.html", "superClass": "qx.core.Object", "childClasses": "qx.html.Blocker,qx.html.Canvas,qx.html.Decorator,qx.html.Flash,qx.html.Iframe,qx.html.Image,qx.html.Input,qx.html.Label,qx.html.Root", "fullName": "qx.html.Element", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>High-performance, high-level <span class=\"caps\">DOM</span> element creation and management.</p>\n\n<p>Includes support for <span class=\"caps\">HTML</span> and style attributes. Elements also have\ngot a powerful children and visibility management.</p>\n\n<p>Processes <span class=\"caps\">DOM</span> insertion and modification with a advanced logic\nto reduce the real transactions.</p>\n\n<p>From the view of the parent you can use the following children management\nmethods:\n{@link #getChildren}, {@link #indexOf}, {@link #hasChild}, {@link #add},\n{@link #addAt}, {@link #remove}, {@link #removeAt}, {@link #removeAll}</p>\n\n<p>Each child itself also has got some powerful methods to control its\nposition:\n{@link #getParent}, {@link #free},\n{@link #insertInto}, {@link #insertBefore}, {@link #insertAfter},\n{@link #moveTo}, {@link #moveBefore}, {@link #moveAfter},</p>"}, "type": "desc"}, {"type": "constructor", "children": [{"attributes": {"overriddenFrom": "qx.core.Object", "isCtor": true, "name": "ctor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "\"div\"", "name": "tagName"}, "type": "param", "children": [{"attributes": {"text": "<p>Tag name of the element to create</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates a new Element</p>"}, "type": "desc"}]}]}, {"type": "methods-static", "children": [{"attributes": {"access": "private", "isStatic": true, "name": "__getCaptureElement"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the mouse capture element</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The mouse capture <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__getFocusHandler"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the focus handler</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The focus handler</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.handler.Focus"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "isStatic": true, "name": "__willBecomeInvisible"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "domElement"}, "type": "param", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">DOM</span> element to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the given <span class=\"caps\">DOM</span> element will become invisible after the flush</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the element will become invisible</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "isStatic": true, "name": "_scheduleFlush"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "job"}, "type": "param", "children": [{"attributes": {"text": "<p>The job descriptor. Should always be <code>&#8220;element&#8221;</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Schedule a deferred element queue flush. If the widget subsystem is used\nthis method gets overwritten by {@link qx.ui.core.queue.Manager}.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "flush"}, "type": "method", "children": [{"attributes": {"text": "<p>Flush the global modified list</p>"}, "type": "desc"}]}]}, {"type": "constants", "children": [{"attributes": {"type": "Boolean", "name": "DEBUG", "value": "false"}, "type": "constant", "children": [{"attributes": {"text": "<p>If debugging should be enabled</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"type": "methods", "children": [{"attributes": {"access": "private", "name": "__addChildHelper"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "child"}, "type": "param", "children": [{"attributes": {"text": "<p>the element to add</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper for all children addition needs</p>"}, "type": "desc"}, {"type": "throws", "children": [{"attributes": {"text": "<p>an exception if the given element is already a child\n    of this element</p>"}, "type": "desc"}]}]}, {"attributes": {"access": "private", "name": "__flush"}, "type": "method", "children": [{"attributes": {"text": "<p>Syncs data of an HtmlElement object to the <span class=\"caps\">DOM</span>.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__moveChildHelper"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "child"}, "type": "param", "children": [{"attributes": {"text": "<p>the moved element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper for all children move needs</p>"}, "type": "desc"}, {"type": "throws", "children": [{"attributes": {"text": "<p>an exception if the given element is not a child\n    of this element</p>"}, "type": "desc"}]}]}, {"attributes": {"access": "private", "name": "__onScroll"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>scroll-event</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Native"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handler for the scroll-event</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__performAction"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "action"}, "type": "param", "children": [{"attributes": {"text": "<p>action to queue</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "args"}, "type": "param", "children": [{"attributes": {"text": "<p>optional list of arguments for the action</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Takes the action to process as argument and queues this action if the\nunderlying <span class=\"caps\">DOM</span> element is not yet created.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__removeChildHelper"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "child"}, "type": "param", "children": [{"attributes": {"text": "<p>the removed element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper for all children removal needs</p>"}, "type": "desc"}, {"type": "throws", "children": [{"attributes": {"text": "<p>an exception if the given element is not a child\n    of this element</p>"}, "type": "desc"}]}]}, {"attributes": {"access": "private", "name": "__willBeSeeable"}, "type": "method", "children": [{"attributes": {"text": "<p>Walk up the internal children hierarchy and\nlook if one of the children is marked as root.</p>\n\n<p>This method is quite performance hungry as it\nreally walks up recursively.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_applyProperty"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Unique property identifier</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Any valid value (depends on the property)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies a special property with the given value.</p>\n\n<p>This property apply routine can be easily overwritten and\nextended by sub classes to add new low level features which\nare not easily possible using styles and attributes.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_copyData"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "fromMarkup"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the copy should respect styles\n  given from markup</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Copies data between the internal representation and the <span class=\"caps\">DOM</span>. This\nsimply copies all the data and only works well directly after\nelement creation. After this the data must be synced using {@link #_syncData}</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_createDomElement"}, "type": "method", "children": [{"attributes": {"text": "<p>Internal helper to generate the <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_getProperty"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the misc</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the value of the given misc.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the value of the misc</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_insertChildren"}, "type": "method", "children": [{"attributes": {"text": "<p>Append all child nodes to the <span class=\"caps\">DOM</span>\nelement. This function is used when the element is initially\ncreated. After this initial apply {@link #_syncChildren} is used\ninstead.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_removeProperty"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>the name of the misc</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "direct"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the value should be removed\n   directly (without queuing)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the given misc</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_scheduleChildrenUpdate"}, "type": "method", "children": [{"attributes": {"text": "<p>Add the element to the global modification list.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_setProperty"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>the name of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>the value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "direct"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the value should be applied\n   directly (without queuing)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set up the given property.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_syncChildren"}, "type": "method", "children": [{"attributes": {"text": "<p>Syncronize internal children hierarchy to the <span class=\"caps\">DOM</span>. This is used\nfor further runtime updates after the element has been created\ninitially.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_syncData"}, "type": "method", "children": [{"attributes": {"text": "<p>Syncronizes data between the internal representation and the <span class=\"caps\">DOM</span>. This\nis the counterpart of {@link #_copyData} and is used for further updates\nafter the element has been created.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "activate"}, "type": "method", "children": [{"attributes": {"text": "<p>Mark this element to get activated on the next flush of the queue</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "add"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>elements to insert</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element..."}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Append all given children at the end of this element.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "addAt"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "child"}, "type": "param", "children": [{"attributes": {"text": "<p>the element to insert</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}, {"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>the index (starts at 0 for the\n    first child) to insert (the index of the following\n    children will be increased by one)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts a new element into this element at the given position.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"overriddenFrom": "qx.core.Object", "name": "addListener"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the event</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Function to execute on event</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>Execution context of given function</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "capture"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether capturing should be enabled</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds an event listener to the element.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>An opaque id, which can be used to remove the event listener\n        using the {@link #removeListenerById} method.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "blur"}, "type": "method", "children": [{"attributes": {"text": "<p>Mark this element to get blurred on the next flush of the queue</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "capture"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "true", "name": "containerCapture"}, "type": "param", "children": [{"attributes": {"text": "<p>If true all events originating in\n  the container are captured. If false events originating in the container\n  are not captured.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Captures all mouse events to this element</p>"}, "type": "desc"}]}, {"attributes": {"name": "clearTextSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Clears the selection of the element.</p>\n\n<p>This method only works if the underlying <span class=\"caps\">DOM</span> element is already created.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "deactivate"}, "type": "method", "children": [{"attributes": {"text": "<p>Mark this element to get deactivated on the next flush of the queue</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "disableScrolling"}, "type": "method", "children": [{"attributes": {"text": "<p>Disables browser-native scrolling</p>"}, "type": "desc"}]}, {"attributes": {"name": "enableScrolling"}, "type": "method", "children": [{"attributes": {"text": "<p>Re-enables browser-native scrolling</p>"}, "type": "desc"}]}, {"attributes": {"name": "exclude"}, "type": "method", "children": [{"attributes": {"text": "<p>Marks the element as excluded which means it will be removed\nfrom the <span class=\"caps\">DOM</span> and ignored for updates until it gets included again.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "focus"}, "type": "method", "children": [{"attributes": {"text": "<p>Focus this element.</p>\n\n<p>If the underlaying <span class=\"caps\">DOM</span> element is not yet created, the\nfocus is queued for processing after the element creation.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "free"}, "type": "method", "children": [{"attributes": {"text": "<p>Remove self from the current parent.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getAllStyles"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a map of all styles. Do not modify the result map!</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>All styles or <code>null</code> when none are configured.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getAttribute"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the attribute</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the value of the given attribute.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the value of the attribute</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getChild"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>child index</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get a child element at the given index</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The child element or <code>null</code> if\n    no child is found at that index.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getChildren"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a copy of the internal children structure.</p>\n\n<p>Please do not modify the array in place. If you need\nto work with the data in such a way make yourself\na copy of the data first.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the children list</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getDomElement"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the <span class=\"caps\">DOM</span> element (if created). Please use this with caution.\nIt is better to make all changes to the object itself using the public\n<span class=\"caps\">API</span> rather than to the underlying <span class=\"caps\">DOM</span> element.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">DOM</span> element node</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getNodeName"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the nodeName of the <span class=\"caps\">DOM</span> element.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The node name</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getParent"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the parent of this element.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The parent of this element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getScrollX"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the horizontal scroll position.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Horizontal scroll position</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getScrollY"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the vertical scroll position.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Vertical scroll position</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getStyle"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the style attribute</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the value of the given style attribute.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the value of the style attribute</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTextSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the selection of the element.</p>\n\n<p>If the underlaying <span class=\"caps\">DOM</span> element is not yet created, this methods returns\na null value.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTextSelectionEnd"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the end of the selection of the element.</p>\n\n<p>If the underlaying <span class=\"caps\">DOM</span> element is not yet created, this methods returns\na null value.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTextSelectionLength"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the length of selection of the element.</p>\n\n<p>If the underlaying <span class=\"caps\">DOM</span> element is not yet created, this methods returns\na null value.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTextSelectionStart"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the start of the selection of the element.</p>\n\n<p>If the underlaying <span class=\"caps\">DOM</span> element is not yet created, this methods returns\na null value.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "hasChild"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "child"}, "type": "param", "children": [{"attributes": {"text": "<p>the child</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the given element is a child of this element.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Returns <code>true</code> when the given\n   element is a child of this element.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "hasChildren"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns whether the element has any child nodes</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the element has any child nodes</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"overriddenFrom": "qx.core.Object", "name": "hasListener"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the event type</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "capture"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether to check for listeners of\n        the bubbling or of the capturing phase.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check if there are one or more listeners for an event type.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the object has a listener of the given type.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "hide"}, "type": "method", "children": [{"attributes": {"text": "<p>Marks the element as hidden which means it will kept in <span class=\"caps\">DOM</span> (if it\nis already there, but configured hidden using a <span class=\"caps\">CSS</span> style of display=none).</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "include"}, "type": "method", "children": [{"attributes": {"text": "<p>Marks the element as included which means it will be moved into\nthe <span class=\"caps\">DOM</span> again and synced with the internal data representation.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "indexOf"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "child"}, "type": "param", "children": [{"attributes": {"text": "<p>the child</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Find the position of the given child</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>returns the position. If the element\n    is not a child <code>-1</code> will be returned.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"name": "insertAfter"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "rel"}, "type": "param", "children": [{"attributes": {"text": "<p>the related element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert self after the given (related) element</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "insertBefore"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "rel"}, "type": "param", "children": [{"attributes": {"text": "<p>the related element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert self before the given (related) element</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "insertInto"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "parent"}, "type": "param", "children": [{"attributes": {"text": "<p>The new parent of this element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional position</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert self into the given parent. Normally appends self to the end,\nbut optionally a position can be defined. With index <code>0</code> it\nwill be inserted at the begin.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isFocusable"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the element is focusable (or will be when created)</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<code>true</code> when the element is focusable."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isIncluded"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the element is part of the <span class=\"caps\">DOM</span></p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the element is part of the <span class=\"caps\">DOM</span>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isNativelyFocusable"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the element is natively focusable (or will be when created)</p>\n\n<p>This ignores the configured tabIndex.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<code>true</code> when the element is focusable."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isVisible"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the element is visible.</p>\n\n<p>Please note: This does not control the visibility or parent inclusion recursively.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Returns <code>true</code> when the element is configured\n  to be visible.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "moveAfter"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "rel"}, "type": "param", "children": [{"attributes": {"text": "<p>the related child</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Move self after the given (related) child.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "moveBefore"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "rel"}, "type": "param", "children": [{"attributes": {"text": "<p>the related child</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Move self before the given (related) child.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "moveTo"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>the index (starts at 0 for the first child)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Move self to the given index in the current parent.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}, {"type": "throws", "children": [{"attributes": {"text": "<p>an exception when the given element is not child\n     of this element.</p>"}, "type": "desc"}]}]}, {"attributes": {"name": "releaseCapture"}, "type": "method", "children": [{"attributes": {"text": "<p>Releases this element from a previous {@link #capture} call</p>"}, "type": "desc"}]}, {"attributes": {"name": "remove"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "childs"}, "type": "param", "children": [{"attributes": {"text": "<p>children to remove</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element..."}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes all given children</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "removeAll"}, "type": "method", "children": [{"attributes": {"text": "<p>Remove all children from this element.</p>"}, "type": "desc"}, {"type": "return"}]}, {"attributes": {"name": "removeAt"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>the position of the\n    child (starts at 0 for the first child)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the child at the given index</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "removeAttribute"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>the name of the attribute</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "direct"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the value should be removed\n   directly (without queuing)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the given attribute</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"overriddenFrom": "qx.core.Object", "name": "removeListener"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the event</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Function to execute on event</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>Execution context of given function</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "capture"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether capturing should be enabled</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes an event listener from the element.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"overriddenFrom": "qx.core.Object", "name": "removeListenerById"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>The id returned by {@link #addListener}</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes an event listener from an event target by an id returned by\n{@link #addListener}</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "removeStyle"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>the name of the style attribute</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "direct"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the value should be removed\n   directly (without queuing)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the given style attribute</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "scrollChildIntoViewX"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p>The element to scroll into the viewport.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "align"}, "type": "param", "children": [{"attributes": {"text": "<p>Alignment of the element. Allowed values:\n  <code>left</code> or <code>right</code>. Could also be null.\n  Without a given alignment the method tries to scroll the widget\n  with the minimum effort needed.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "true", "name": "direct"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the execution should be made\n  directly when possible</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scrolls the given child element into view. Only scrolls children.\nDo not influence elements on top of this element.</p>\n\n<p>If the element is currently invisible it gets scrolled automatically\nat the next time it is visible again (queued).</p>"}, "type": "desc"}]}, {"attributes": {"name": "scrollChildIntoViewY"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p>The element to scroll into the viewport.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "align"}, "type": "param", "children": [{"attributes": {"text": "<p>Alignment of the element. Allowed values:\n  <code>top</code> or <code>bottom</code>. Could also be null.\n  Without a given alignment the method tries to scroll the widget\n  with the minimum effort needed.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "true", "name": "direct"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the execution should be made\n  directly when possible</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scrolls the given child element into view. Only scrolls children.\nDo not influence elements on top of this element.</p>\n\n<p>If the element is currently invisible it gets scrolled automatically\nat the next time it is visible again (queued).</p>"}, "type": "desc"}]}, {"attributes": {"name": "scrollToX"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "x"}, "type": "param", "children": [{"attributes": {"text": "<p>Horizontal scroll position</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "lazy"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the scrolling should be performed\n   during element flush.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scrolls the element to the given left position.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "scrollToY"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "y"}, "type": "param", "children": [{"attributes": {"text": "<p>Vertical scroll position</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "lazy"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the scrolling should be performed\n   during element flush.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scrolls the element to the given top position.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setAttribute"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>the name of the attribute</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>the value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "direct"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the value should be applied\n   directly (without queuing)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set up the given attribute</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setAttributes"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>a map where the key is the name of the property\n   and the value is the value to use.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "direct"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the values should be applied\n   directly (without queuing)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convenience method to modify a set of attributes at once.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setNodeName"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>The node name</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the nodeName of the <span class=\"caps\">DOM</span> element.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setRoot"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "root"}, "type": "param", "children": [{"attributes": {"text": "<p>The root flag.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the element&#8217;s root flag, which indicates\nwhether the element should be a root element or not.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setSelectable"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>True, if the element should be selectable.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set whether the element is selectable. It uses the qooxdoo attribute\nqxSelectable with the values &#8216;on&#8217; or &#8216;off&#8217;.\nIn webkit, a special css property will be used (-webkit-user-select).</p>"}, "type": "desc"}]}, {"attributes": {"name": "setStyle"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>the name of the style attribute</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>the value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "direct"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the value should be applied\n   directly (without queuing)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set up the given style attribute</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setStyles"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>a map where the key is the name of the property\n   and the value is the value to use.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "direct"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the values should be applied\n   directly (without queuing)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convenience method to modify a set of styles at once.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setTextSelection"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "start"}, "type": "param", "children": [{"attributes": {"text": "<p>start of the selection (zero based)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "end"}, "type": "param", "children": [{"attributes": {"text": "<p>end of the selection</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the selection of the element with the given start and end value.\nIf no end value is passed the selection will extend to the end.</p>\n\n<p>This method only works if the underlying <span class=\"caps\">DOM</span> element is already created.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "show"}, "type": "method", "children": [{"attributes": {"text": "<p>Marks the element as visible which means that a previously applied\n<span class=\"caps\">CSS</span> style of display=none gets removed and the element will inserted\ninto the <span class=\"caps\">DOM</span>, when this had not already happened before.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>this object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "useElement"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p>Element to reuse</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Uses an existing element instead of creating one. This may be interesting\nwhen the <span class=\"caps\">DOM</span> element is directly needed to add content etc.</p>"}, "type": "desc"}]}, {"attributes": {"name": "useMarkup"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "html"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> markup with one root element\n  which is used as the main element for this instance.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Uses existing markup for this element. This is mainly used\nto insert pre-built markup blocks into the element hierarchy.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The created <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}]}]}