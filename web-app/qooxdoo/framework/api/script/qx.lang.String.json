{"attributes": {"fullName": "qx.lang.String", "packageName": "qx.lang", "isStatic": true, "type": "bootstrap", "name": "String"}, "type": "class", "children": [{"attributes": {"text": "<p>String helper functions</p>\n\n<p>The native JavaScript String is not modified by this class. However,\nthere are modifications to the native String in {@link qx.lang.Core} for\nbrowsers that do not support certain features.</p>\n\n<p>The string/array generics introduced in JavaScript 1.6 are supported by\n{@link qx.lang.Generics}.</p>"}, "type": "desc"}, {"type": "methods-static", "children": [{"attributes": {"isStatic": true, "name": "camelCase"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>hyphenated string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Converts a hyphenated string (separated by &#8217;-&#8217;) to camel case.</p>\n\n<p>Example:</p>\n\n<pre class=\"javascript\">qx.lang.String.camelCase(\"I-like-cookies\"); //returns \"ILikeCookies\"</pre>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>camelcase string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "capitalize"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>any string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Converts a string to camel case.</p>\n\n<p>Example:</p>\n\n<pre class=\"javascript\">qx.lang.String.camelCase(\"i like cookies\"); //returns \"I Like Cookies\"</pre>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>capitalized string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "clean"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string to clean up</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes all extraneous whitespace from a string and trims it</p>\n\n<p>Example:</p>\n\n<code>\nqx.lang.String.clean(\" i      like     cookies      \\n\\n\");\n</code>\n\n<p>Returns &#8220;i like cookies&#8221;</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Cleaned up string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "contains"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "substring"}, "type": "param", "children": [{"attributes": {"text": "<p>substring to search for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether the string contains a given substring</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>whether the string contains the substring</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "endsWith"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "fullstr"}, "type": "param", "children": [{"attributes": {"text": "<p>the string to search in</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "substr"}, "type": "param", "children": [{"attributes": {"text": "<p>the substring to look for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether the string ends with the given substring</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>whether the string ends with the given substring</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "escapeRegexpChars"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string where to escape the chars.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Escapes all chars that have a special meaning in regular expressions</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the string with the escaped chars.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "firstLow"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert the first character of the string to lower case.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the string with a lower case first character</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "firstUp"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert the first character of the string to upper case.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the string with a upper case first character</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "format"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "pattern"}, "type": "param", "children": [{"attributes": {"text": "<p>format string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "args"}, "type": "param", "children": [{"attributes": {"text": "<p>array of arguments to insert into the format string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Print a list of arguments using a format string\nIn the format string occurrences of %n are replaced by the n&#8217;th element of the args list.\nExample:</p>\n\n<pre class=\"javascript\">qx.lang.String.format(\"Hello %1, my name is %2\", [\"Egon\", \"Franz\"]) == \"Hello Egon, my name is Franz\"</pre>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the formatted string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "hyphenate"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>camelcased string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Converts a camelcased string to a hyphenated (separated by &#8217;-&#8217;) string.</p>\n\n<p>Example:</p>\n\n<pre class=\"javascript\">qx.lang.String.camelCase(\"ILikeCookies\"); //returns \"I-like-cookies\"</pre>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>hyphenated string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "pad"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string to pad</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "length"}, "type": "param", "children": [{"attributes": {"text": "<p>the final length of the string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "ch"}, "type": "param", "children": [{"attributes": {"text": "<p>character used to fill up the string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Pad a string up to a given length. Padding characters are added to the left of the string.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>padded string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "repeat"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>string used to repeat</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "times"}, "type": "param", "children": [{"attributes": {"text": "<p>the number of repetitions</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a string, which repeats a string &#8216;length&#8217; times</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>repeated string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "startsWith"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "fullstr"}, "type": "param", "children": [{"attributes": {"text": "<p>the string to search in</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "substr"}, "type": "param", "children": [{"attributes": {"text": "<p>the substring to look for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether the string starts with the given substring</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>whether the string starts with the given substring</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "stripScripts"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>string containing tags</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "exec"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the filtered code should be executed</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Strips </p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The filtered string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "stripTags"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>string containing tags</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove <span class=\"caps\">HTML</span>/XML tags from a string\nExample:</p>\n\n<pre class=\"javascript\">qx.lang.String.stripTags(\"&lt;h1>Hello&lt;/h1>\") == \"Hello\"</pre>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the string with stripped tags</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "toArray"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string which should be split</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Converts a string to an array of characters.</p>\n\n<pre>\"hello\" => [ \"h\", \"e\", \"l\", \"l\", \"o\" ];</pre>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the result array of characters</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "trim"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string to trim</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>removes white space from the left and the right side of a string</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the trimmed string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "trimLeft"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string to trim</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>removes white space from the left side of a string</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the trimmed string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "trimRight"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string to trim</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>removes white space from the right side of a string</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the trimmed string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}]}]}