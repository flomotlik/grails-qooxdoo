{"attributes": {"name": "Image", "packageName": "qx.ui.basic", "superClass": "qx.ui.core.Widget", "childClasses": "qx.ui.core.DragDropCursor,qx.ui.tree.FolderOpenButton", "fullName": "qx.ui.basic.Image", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>The image class displays an image file</p>\n\n<p>This class supports image clipping, which means that multiple images can be combined\ninto one large image and only the relevant part is shown.</p>\n\n<p><strong>Example</strong></p>\n\n<p>Here is a little example of how to use the widget.</p>\n\n<pre class=\"javascript\">\n  var image = new qx.ui.basic.Image(\"icon/32/actions/format-justify-left.png\");\n\n  this.getRoot().add(image);\n</pre>\n\n<p>This example create a widget to display the image\n<code>icon/32/actions/format-justify-left.png</code>.</p>\n\n<p><strong>External Documentation</strong></p>\n\n<a href=\"http://qooxdoo.org/documentation/1.0/widget/Image\" target=\"_blank\">\nDocumentation of this widget in the qooxdoo wiki.</a>"}, "type": "desc"}, {"type": "constructor", "children": [{"attributes": {"overriddenFrom": "qx.ui.core.Widget", "isCtor": true, "name": "ctor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "null", "name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">URL</span> of the image to display.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}]}]}, {"type": "methods", "children": [{"attributes": {"access": "private", "name": "__checkForContentElementReplacement"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "elementToAdd"}, "type": "param", "children": [{"attributes": {"text": "<p>content element to add</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Image"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks the current child and replaces it if necessary</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__createSuitableContentElement"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "mode"}, "type": "param", "children": [{"attributes": {"text": "<p>internal mode</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates a contentElement suitable for the current mode</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>suitable image content element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Image"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__getMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the current mode if set. Otherwise checks the current source and\nthe current scaling to determine the current mode.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>current internal mode</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__getSuitableContentElement"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns a contentElement suitable for the current mode</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>suitable image contentElement</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.html.Image"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__loaderCallback"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>Image source which was loaded</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "imageInfo"}, "type": "param", "children": [{"attributes": {"text": "<p>Dimensions of the loaded image</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler fired after the preloader has finished loading the icon</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__loadUnmanagedImage"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "el"}, "type": "param", "children": [{"attributes": {"text": "<p>image <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>source path</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Use the ImageLoader to load an unmanaged image</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__setManagedImage"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "el"}, "type": "param", "children": [{"attributes": {"text": "<p>image <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>source path</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Use the ResourceManager to set a managed image</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__setMode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "mode"}, "type": "param", "children": [{"attributes": {"text": "<p>internal mode (alphaScaled|scaled|nonScaled)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remembers the mode to keep track which contentElement is currently in use.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__setUnmanagedImage"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "el"}, "type": "param", "children": [{"attributes": {"text": "<p>image <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>source path</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Use the infos of the ImageLoader to set an unmanaged image</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__updateContentHint"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "width"}, "type": "param", "children": [{"attributes": {"text": "<p>width of the image</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "height"}, "type": "param", "children": [{"attributes": {"text": "<p>height of the image</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Updates the content hint when the image size has been changed</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "apply": "qx.ui.core.Widget#enabled", "overriddenFrom": "qx.ui.core.Widget", "name": "_applyEnabled"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>enabled</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyEnabled}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.basic.Image#scale", "name": "_applyScale"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>scale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyScale}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.basic.Image#source", "name": "_applySource"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>source</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applySource}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "overriddenFrom": "qx.ui.core.Widget", "name": "_createContentElement"}, "type": "method"}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "overriddenFrom": "qx.ui.core.Widget", "name": "_getContentHint"}, "type": "method"}, {"attributes": {"access": "protected", "name": "_styleSource"}, "type": "method", "children": [{"attributes": {"text": "<p>Applies the source to the clipped image instance or preload\na image to detect sizes and apply it afterwards.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.core.Widget", "overriddenFrom": "qx.ui.core.Widget", "name": "getContentElement"}, "type": "method"}, {"attributes": {"name": "getScale", "fromProperty": "scale"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>scale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scale}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>scale</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSource", "fromProperty": "source"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>source</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #source}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>source</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initScale", "fromProperty": "scale"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>scale</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>scale</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #scale}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSource", "fromProperty": "source"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>source</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>source</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #source}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isScale", "fromProperty": "scale"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>scale</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scale}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetScale", "fromProperty": "scale"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>scale</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #scale}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetSource", "fromProperty": "source"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>source</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #source}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setScale", "fromProperty": "scale"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>scale</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>scale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scale}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSource", "fromProperty": "source"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>source</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>source</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #source}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleScale", "fromProperty": "scale"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>scale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scale}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"type": "properties", "children": [{"attributes": {"name": "allowGrowX", "docFrom": "qx.ui.core.LayoutItem", "defaultValue": "false", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.LayoutItem"}, "type": "property"}, {"attributes": {"name": "allowGrowY", "docFrom": "qx.ui.core.LayoutItem", "defaultValue": "false", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.LayoutItem"}, "type": "property"}, {"attributes": {"name": "allowShrinkX", "docFrom": "qx.ui.core.LayoutItem", "defaultValue": "false", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.LayoutItem"}, "type": "property"}, {"attributes": {"name": "allowShrinkY", "docFrom": "qx.ui.core.LayoutItem", "defaultValue": "false", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.LayoutItem"}, "type": "property"}, {"attributes": {"name": "appearance", "docFrom": "qx.ui.core.Widget", "defaultValue": "\"image\"", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.Widget"}, "type": "property"}, {"attributes": {"name": "scale", "defaultValue": "false", "propertyType": "new", "apply": "_applyScale", "check": "Boolean", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether the image should be scaled to the given dimensions</p>\n\n<p>This is disabled by default because it prevents the usage\nof image clipping when enabled.</p>"}, "type": "desc"}]}, {"attributes": {"name": "source", "defaultValue": "null", "event": "changeSource", "allowNull": "true", "propertyType": "new", "apply": "_applySource", "check": "String", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">URL</span> of the image</p>"}, "type": "desc"}]}]}, {"type": "events", "children": [{"attributes": {"name": "changeSource"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #source}."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}]}