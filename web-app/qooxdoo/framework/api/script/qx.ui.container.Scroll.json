{"attributes": {"name": "Scroll", "packageName": "qx.ui.container", "mixins": "qx.ui.core.MContentPadding", "superClass": "qx.ui.core.scroll.AbstractScrollArea", "fullName": "qx.ui.container.Scroll", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>Container, which allows vertical and horizontal scrolling if the contents is\nlarger than the container.</p>\n\n<p>Note that this class can only have one child widget. This container has a\nfixed layout, which cannot be changed.</p>\n\n<p><strong>Example</strong></p>\n\n<p>Here is a little example of how to use the widget.</p>\n\n<pre class=\"javascript\">\n  // create scroll container\n  var scroll = new qx.ui.container.Scroll().set({\n    width: 300,\n    height: 200\n  });\n\n  // add a widget which is larger than the container\n  scroll.add(new qx.ui.core.Widget().set({\n    width: 600,\n    minWidth: 600,\n    height: 400,\n    minHeight: 400\n  });\n\n  this.getRoot().add(scroll);\n</pre>\n\n<p>This example creates a scroll container and adds a widget, which is larger\nthan the container. This will cause the container to display vertical\nand horizontal toolbars.</p>\n\n<p><strong>External Documentation</strong></p>\n\n<a href=\"http://qooxdoo.org/documentation/1.0/widget/Scroll\" target=\"_blank\">\nDocumentation of this widget in the qooxdoo wiki.</a>"}, "type": "desc"}, {"type": "constructor", "children": [{"attributes": {"overriddenFrom": "qx.ui.core.scroll.AbstractScrollArea", "isCtor": true, "name": "ctor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "null", "name": "content"}, "type": "param", "children": [{"attributes": {"text": "<p>The content widget of the scroll\n   container.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.ui.core.LayoutItem"}, "type": "entry"}]}]}]}]}]}, {"type": "methods", "children": [{"attributes": {"access": "protected", "name": "_getContentPaddingTarget"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the element, to which the content padding should be applied.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The content padding target.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"name": "add"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "widget"}, "type": "param", "children": [{"attributes": {"text": "<p>Widget to insert</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the content of the scroll container. Scroll containers\nmay only have one child, so it always replaces the current\nchild with the given one.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getChildren"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the content of the scroll container.</p>\n\n<p>Scroll containers may only have one child. This\nmethod returns an array containing the child or an empty array.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The child array</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"name": "remove"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "widget"}, "type": "param", "children": [{"attributes": {"text": "<p>Widget to remove</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the content of the scroll area.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}]}]}