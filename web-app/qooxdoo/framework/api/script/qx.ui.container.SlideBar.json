{"attributes": {"name": "SlideBar", "packageName": "qx.ui.container", "mixins": "qx.ui.core.MRemoteChildrenHandling,qx.ui.core.MRemoteLayoutHandling", "superClass": "qx.ui.core.Widget", "childClasses": "qx.ui.menu.MenuSlideBar", "fullName": "qx.ui.container.SlideBar", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>Container, which provides scrolling in one dimension (vertical or horizontal).</p>\n\n<p><strong>Example</strong></p>\n\n<p>Here is a little example of how to use the widget.</p>\n\n<pre class=\"javascript\">\n  // create slide bar container\n  slideBar = new qx.ui.container.SlideBar().set({\n    width: 300\n  });\n\n  // set layout\n  slideBar.setLayout(new qx.ui.layout.HBox());\n\n  // add some widgets\n  for (var i=0; i<10; i++)\n  {\n    slideBar.add((new qx.ui.core.Widget()).set({\n      backgroundColor : (i % 2 == 0) ? \"red\" : \"blue\",\n      width : 60\n    }));\n  }\n\n  this.getRoot().add(slideBar);\n</pre>\n\n<p>This example creates a SlideBar and add some widgets with alternating\nbackground colors. Since the content is larger than the container, two\nscroll buttons at the left and the right edge are shown.</p>\n\n<p><strong>External Documentation</strong></p>\n\n<a href=\"http://qooxdoo.org/documentation/1.0/widget/SlideBar\" target=\"_blank\">\nDocumentation of this widget in the qooxdoo wiki.</a>"}, "type": "desc"}, {"type": "constructor", "children": [{"attributes": {"overriddenFrom": "qx.ui.core.Widget", "isCtor": true, "name": "ctor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "\"horizontal\"", "name": "orientation"}, "type": "param", "children": [{"attributes": {"text": "<p>The slide bar orientation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}]}]}, {"type": "methods", "children": [{"attributes": {"access": "protected", "apply": "qx.ui.container.SlideBar#orientation", "name": "_applyOrientation"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>orientation</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyOrientation}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "overriddenFrom": "qx.ui.core.Widget", "name": "_createChildControlImpl"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "id"}, "type": "param"}]}]}, {"attributes": {"access": "protected", "name": "_hideArrows"}, "type": "method", "children": [{"attributes": {"text": "<p>Hide the arrows (Called from resize event)</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_onExecuteBackward"}, "type": "method", "children": [{"attributes": {"text": "<p>Scroll handler for left scrolling</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_onExecuteForward"}, "type": "method", "children": [{"attributes": {"text": "<p>Scroll handler for right scrolling</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_onMouseWheel"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>the mouse event</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Mouse"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scolls pane on mousewheel events</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_onRemoveChild"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper function for Gecko. Modifies the scroll offset when a child is\nremoved.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_onResize"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Listener for resize event. This event is fired after the\nfirst flush of the element which leads to another queuing\nwhen the changes modify the visibility of the scroll buttons.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_onScroll"}, "type": "method", "children": [{"attributes": {"text": "<p>Update arrow enabled state after scrolling</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_showArrows"}, "type": "method", "children": [{"attributes": {"text": "<p>Show the arrows (Called from resize event)</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_updateArrowsEnabled"}, "type": "method", "children": [{"attributes": {"text": "<p>Update arrow enabled state</p>"}, "type": "desc"}]}, {"attributes": {"docFrom": "qx.ui.core.Widget", "overriddenFrom": "qx.ui.core.Widget", "name": "getChildrenContainer"}, "type": "method"}, {"attributes": {"name": "getOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>orientation</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>orientation</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getScrollStep", "fromProperty": "scrollStep"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>scrollStep</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollStep}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>scrollStep</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>orientation</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>orientation</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initScrollStep", "fromProperty": "scrollStep"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>scrollStep</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>scrollStep</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollStep}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>orientation</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetScrollStep", "fromProperty": "scrollStep"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>scrollStep</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollStep}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "scrollBy"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "0", "name": "offset"}, "type": "param", "children": [{"attributes": {"text": "<p>Amount to scroll</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scrolls the element&#8217;s content by the given amount.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "scrollTo"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The position to scroll to.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scrolls the element&#8217;s content to the given coordinate</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>orientation</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>orientation</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setScrollStep", "fromProperty": "scrollStep"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>scrollStep</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>scrollStep</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #scrollStep}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"type": "properties", "children": [{"attributes": {"name": "appearance", "docFrom": "qx.ui.core.Widget", "defaultValue": "\"slidebar\"", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.Widget"}, "type": "property"}, {"attributes": {"apply": "_applyOrientation", "defaultValue": "\"horizontal\"", "name": "orientation", "possibleValues": "\"horizontal\",\"vertical\"", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Orientation of the bar</p>"}, "type": "desc"}]}, {"attributes": {"check": "Integer", "defaultValue": "15", "name": "scrollStep", "themeable": "true", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The number of pixels to scroll if the buttons are pressed</p>"}, "type": "desc"}]}]}]}