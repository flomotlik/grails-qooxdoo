{"attributes": {"fullName": "qx.ui.core.MMovable", "packageName": "qx.ui.core", "type": "mixin", "name": "MMovable", "includer": "qx.ui.window.Window"}, "type": "class", "children": [{"attributes": {"text": "<p>Provides move behavior to any widget.</p>\n\n<p>The widget using the mixing must register a widget as move handle so that\nthe mouse events needed for moving it are attached to this widget).</p>\n\n<pre class=\"javascript\">this._activateMoveHandle(widget);</pre>"}, "type": "desc"}, {"type": "methods", "children": [{"attributes": {"access": "private", "isMixin": true, "name": "__computeMoveCoordinates"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Mouse event</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Mouse"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Computes the new drag coordinates</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isMixin": true, "name": "__getMoveFrame"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the widget, which draws the resize/move frame.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The resize frame</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "isMixin": true, "name": "__onMoveLoseCapture"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Lose capture event</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event listener for <code>losecapture</code> event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isMixin": true, "name": "__showMoveFrame"}, "type": "method", "children": [{"attributes": {"text": "<p>Creates, shows and syncs the frame with the widget.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "isMixin": true, "name": "_activateMoveHandle"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "widget"}, "type": "param", "children": [{"attributes": {"text": "<p>Widget to activate as move handle</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Configures the given widget as a move handle</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "isMixin": true, "name": "_onMoveMouseDown"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>mouse down event</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Mouse"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Enables the capturing of the caption bar and prepares the drag session and the\nappearance (translucent, frame or opaque) for the moving of the window.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "isMixin": true, "name": "_onMoveMouseMove"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>mouse move event</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Does the moving of the window by rendering the position\nof the window (or frame) at runtime using direct dom methods.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "isMixin": true, "name": "_onMoveMouseUp"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>mouse up event</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Mouse"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Disables the capturing of the caption bar and moves the window\nto the last position of the drag session. Also restores the appearance\nof the window.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getMovable", "fromProperty": "movable"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>movable</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #movable}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>movable</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getUseMoveFrame", "fromProperty": "useMoveFrame"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>useMoveFrame</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #useMoveFrame}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>useMoveFrame</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initMovable", "fromProperty": "movable"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>movable</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>movable</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #movable}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initUseMoveFrame", "fromProperty": "useMoveFrame"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>useMoveFrame</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>useMoveFrame</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #useMoveFrame}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isMovable", "fromProperty": "movable"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>movable</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #movable}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isUseMoveFrame", "fromProperty": "useMoveFrame"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>useMoveFrame</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #useMoveFrame}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetMovable", "fromProperty": "movable"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>movable</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #movable}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetUseMoveFrame", "fromProperty": "useMoveFrame"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>useMoveFrame</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #useMoveFrame}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setMovable", "fromProperty": "movable"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>movable</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>movable</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #movable}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setUseMoveFrame", "fromProperty": "useMoveFrame"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>useMoveFrame</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>useMoveFrame</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #useMoveFrame}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleMovable", "fromProperty": "movable"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>movable</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #movable}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleUseMoveFrame", "fromProperty": "useMoveFrame"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>useMoveFrame</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #useMoveFrame}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"type": "properties", "children": [{"attributes": {"check": "Boolean", "defaultValue": "true", "isMixin": true, "name": "movable", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether the widget is movable</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "defaultValue": "false", "isMixin": true, "name": "useMoveFrame", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether to use a frame instead of the original widget during move sequences</p>"}, "type": "desc"}]}]}]}