{"attributes": {"fullName": "qx.ui.core.MPlacement", "packageName": "qx.ui.core", "type": "mixin", "name": "MPlacement", "includer": "qx.ui.core.DragDropCursor,qx.ui.popup.Popup,qx.ui.menu.Menu"}, "type": "class", "children": [{"attributes": {"text": "<p>Methods to place popup like widgets to other widgets, points,\nmouse event coordinates, etc.</p>"}, "type": "desc"}, {"type": "methods", "children": [{"attributes": {"access": "private", "isMixin": true, "name": "__getPlacementSize"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>This function will be called with the size as\n   first argument</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the size of the object to place. The callback will be called with\nthe size as first argument. This methods works asynchronously.</p>\n\n<p>The size of the object to place is the size of the widget. If a widget\nincluding this mixin needs a different size it can implement the method\n<code>_computePlacementSize</code>, which returns the size.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "isMixin": true, "name": "__place"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "coords"}, "type": "param", "children": [{"attributes": {"text": "<p>Location of the object to align the this to. This map\n  should have the keys <code>left</code>, <code>top</code>, <code>right</code>\n  and <code>bottom</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal method to read specific this properties and\napply the results to the this afterwards.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "isMixin": true, "name": "_getPlacementOffsets"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the placement offsets as a map</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The placement offsets</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getDomMove", "fromProperty": "domMove"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>domMove</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #domMove}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>domMove</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "getLayoutLocation"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "widget"}, "type": "param", "children": [{"attributes": {"text": "<p>Any widget</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the location data like {qx.bom.element.Location#get} does,\nbut does not rely on <span class=\"caps\">DOM</span> elements coordinates to be rendered. Instead,\nthis method works with the available layout data available in the moment\nwhen it is executed.\nThis works best when called in some type of <code>resize</code> or\n<code>move</code> event which are supported by all widgets out of the\nbox.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Returns a map with <code>left</code>, <code>top</code>,\n  <code>right</code> and <code>bottom</code> which contains the distance\n  of the widget relative coords the document.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOffsetBottom", "fromProperty": "offsetBottom"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>offsetBottom</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetBottom}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>offsetBottom</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOffsetLeft", "fromProperty": "offsetLeft"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>offsetLeft</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetLeft}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>offsetLeft</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOffsetRight", "fromProperty": "offsetRight"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>offsetRight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetRight}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>offsetRight</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOffsetTop", "fromProperty": "offsetTop"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>offsetTop</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetTop}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>offsetTop</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getPlacementModeX", "fromProperty": "placementModeX"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>placementModeX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #placementModeX}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>placementModeX</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getPlacementModeY", "fromProperty": "placementModeY"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>placementModeY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #placementModeY}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>placementModeY</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getPlaceMethod", "fromProperty": "placeMethod"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>placeMethod</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #placeMethod}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>placeMethod</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getPosition", "fromProperty": "position"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>position</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #position}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>position</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "getSmart"}, "type": "method", "children": [{"type": "deprecated", "children": [{"attributes": {"text": "<p>Use the {@link #placementModeX} and {@link #placementModeY}\n  properties instead.</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Whether the widget should be positioned in an\noptimal way i.e. try to keep it visible.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<code>true</code> if it should positioned optimal,\n   <code>false</code> otherwise."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initDomMove", "fromProperty": "domMove"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>domMove</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>domMove</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #domMove}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOffsetBottom", "fromProperty": "offsetBottom"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>offsetBottom</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>offsetBottom</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetBottom}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOffsetLeft", "fromProperty": "offsetLeft"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>offsetLeft</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>offsetLeft</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetLeft}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOffsetRight", "fromProperty": "offsetRight"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>offsetRight</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>offsetRight</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetRight}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOffsetTop", "fromProperty": "offsetTop"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>offsetTop</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>offsetTop</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetTop}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initPlacementModeX", "fromProperty": "placementModeX"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>placementModeX</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>placementModeX</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #placementModeX}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initPlacementModeY", "fromProperty": "placementModeY"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>placementModeY</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>placementModeY</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #placementModeY}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initPlaceMethod", "fromProperty": "placeMethod"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>placeMethod</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>placeMethod</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #placeMethod}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initPosition", "fromProperty": "position"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>position</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>position</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #position}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isDomMove", "fromProperty": "domMove"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>domMove</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #domMove}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "isSmart"}, "type": "method", "children": [{"type": "deprecated", "children": [{"attributes": {"text": "<p>Use the {@link #placementModeX} and {@link #placementModeY}\n  properties instead.</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Whether the widget should be positioned in an\noptimal way i.e. try to keep it visible.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<code>true</code> if it should positioned optimal,\n   <code>false</code> otherwise."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "moveTo"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "left"}, "type": "param", "children": [{"attributes": {"text": "<p>The left position</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "top"}, "type": "param", "children": [{"attributes": {"text": "<p>The top position</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the position. Uses low-level, high-performance <span class=\"caps\">DOM</span>\nmethods when the property {@link #domMove} is enabled.</p>"}, "type": "desc"}]}, {"attributes": {"isMixin": true, "name": "placeToElement"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to align to</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "liveupdate"}, "type": "param", "children": [{"attributes": {"text": "<p>Flag indicating if the position of the\nwidget should be checked and corrected automatically.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Places the widget to any (rendered) <span class=\"caps\">DOM</span> element.</p>"}, "type": "desc"}]}, {"attributes": {"isMixin": true, "name": "placeToMouse"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "event"}, "type": "param", "children": [{"attributes": {"text": "<p>Mouse event to align to</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Mouse"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Places the widget to the mouse cursor position.</p>"}, "type": "desc"}]}, {"attributes": {"isMixin": true, "name": "placeToPoint"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "point"}, "type": "param", "children": [{"attributes": {"text": "<p>Coordinate of any point with the keys <code>left</code>\n  and <code>top</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Places the widget in relation to the given point</p>"}, "type": "desc"}]}, {"attributes": {"isMixin": true, "name": "placeToWidget"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Target coords align coords</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}, {"attributes": {"name": "liveupdate"}, "type": "param", "children": [{"attributes": {"text": "<p>Flag indicating if the position of the\nwidget should be checked and corrected automatically.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Places the widget to another (at least laid out) widget. The <span class=\"caps\">DOM</span>\nelement is not needed, but the bounds are needed to compute the\nlocation of the widget to align to.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetDomMove", "fromProperty": "domMove"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>domMove</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #domMove}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetOffset", "fromProperty": "offset"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>offset</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #offset}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetOffsetBottom", "fromProperty": "offsetBottom"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>offsetBottom</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetBottom}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetOffsetLeft", "fromProperty": "offsetLeft"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>offsetLeft</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetLeft}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetOffsetRight", "fromProperty": "offsetRight"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>offsetRight</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetRight}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetOffsetTop", "fromProperty": "offsetTop"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>offsetTop</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetTop}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetPlacementModeX", "fromProperty": "placementModeX"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>placementModeX</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #placementModeX}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetPlacementModeY", "fromProperty": "placementModeY"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>placementModeY</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #placementModeY}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetPlaceMethod", "fromProperty": "placeMethod"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>placeMethod</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #placeMethod}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetPosition", "fromProperty": "position"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>position</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #position}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "resetSmart"}, "type": "method", "children": [{"type": "deprecated", "children": [{"attributes": {"text": "<p>Use the {@link #placementModeX} and {@link #placementModeY}\n  properties instead.</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Whether the widget should be positioned in an\noptimal way i.e. try to keep it visible.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setDomMove", "fromProperty": "domMove"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>domMove</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>domMove</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #domMove}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOffset", "fromProperty": "offset"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "offsetTop"}, "type": "param", "children": [{"attributes": {"text": "<p>Sets the value of the property {@link #offsetTop}.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "offsetRight"}, "type": "param", "children": [{"attributes": {"text": "<p>Sets the value of the property {@link #offsetRight}.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "offsetBottom"}, "type": "param", "children": [{"attributes": {"text": "<p>Sets the value of the property {@link #offsetBottom}.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "offsetLeft"}, "type": "param", "children": [{"attributes": {"text": "<p>Sets the value of the property {@link #offsetLeft}.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the values of the property group <code>offset</code>.</p>\n\n<p>This setter supports a shorthand mode compatible with the way margins and paddins are set in <span class=\"caps\">CSS</span>.</p>\n\n<p>For further details take a look at the property definition: {@link #offset}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setOffsetBottom", "fromProperty": "offsetBottom"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>offsetBottom</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>offsetBottom</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetBottom}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOffsetLeft", "fromProperty": "offsetLeft"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>offsetLeft</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>offsetLeft</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetLeft}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOffsetRight", "fromProperty": "offsetRight"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>offsetRight</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>offsetRight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetRight}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOffsetTop", "fromProperty": "offsetTop"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>offsetTop</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>offsetTop</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #offsetTop}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setPlacementModeX", "fromProperty": "placementModeX"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>placementModeX</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>placementModeX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #placementModeX}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setPlacementModeY", "fromProperty": "placementModeY"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>placementModeY</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>placementModeY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #placementModeY}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setPlaceMethod", "fromProperty": "placeMethod"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>placeMethod</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>placeMethod</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #placeMethod}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setPosition", "fromProperty": "position"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>position</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>position</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #position}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "setSmart"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>for positioning</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"type": "deprecated", "children": [{"attributes": {"text": "<p>Use the {@link #placementModeX} and {@link #placementModeY}\n  properties instead.</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Whether the widget should be positioned in an\noptimal way i.e. try to keep it visible.</p>"}, "type": "desc"}]}, {"attributes": {"name": "toggleDomMove", "fromProperty": "domMove"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>domMove</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #domMove}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "toggleSmart"}, "type": "method", "children": [{"type": "deprecated", "children": [{"attributes": {"text": "<p>Use the {@link #placementModeX} and {@link #placementModeY}\n  properties instead.</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Whether the widget should be positioned in an\noptimal way i.e. try to keep it visible.</p>"}, "type": "desc"}]}]}, {"type": "properties", "children": [{"attributes": {"check": "Boolean", "defaultValue": "false", "isMixin": true, "name": "domMove", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether the widget should moved using <span class=\"caps\">DOM</span> methods.</p>"}, "type": "desc"}]}, {"attributes": {"group": "\"offsetTop\",\"offsetRight\",\"offsetBottom\",\"offsetLeft\"", "name": "offset", "mode": "shorthand", "propertyType": "group", "isMixin": true, "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Offsets in one group</p>"}, "type": "desc"}]}, {"attributes": {"name": "offsetBottom", "defaultValue": "0", "propertyType": "new", "isMixin": true, "check": "Integer", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Bottom offset of the mouse pointer (in pixel)</p>"}, "type": "desc"}]}, {"attributes": {"name": "offsetLeft", "defaultValue": "0", "propertyType": "new", "isMixin": true, "check": "Integer", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Left offset of the mouse pointer (in pixel)</p>"}, "type": "desc"}]}, {"attributes": {"name": "offsetRight", "defaultValue": "0", "propertyType": "new", "isMixin": true, "check": "Integer", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Right offset of the mouse pointer (in pixel)</p>"}, "type": "desc"}]}, {"attributes": {"name": "offsetTop", "defaultValue": "0", "propertyType": "new", "isMixin": true, "check": "Integer", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Top offset of the mouse pointer (in pixel)</p>"}, "type": "desc"}]}, {"attributes": {"name": "placementModeX", "defaultValue": "\"keep-align\"", "propertyType": "new", "possibleValues": "\"direct\",\"keep-align\",\"best-fit\"", "isMixin": true, "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Selects the algorithm to place the widget horizontally. <code>direct</code>\nuses {@link qx.util.placement.DirectAxis}, <code>keep-align</code>\nuses {@link qx.util.placement.KeepAlignAxis} and <code>best-fit</code>\nuses {@link qx.util.placement.BestFitAxis}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "placementModeY", "defaultValue": "\"keep-align\"", "propertyType": "new", "possibleValues": "\"direct\",\"keep-align\",\"best-fit\"", "isMixin": true, "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Selects the algorithm to place the widget vertically. <code>direct</code>\nuses {@link qx.util.placement.DirectAxis}, <code>keep-align</code>\nuses {@link qx.util.placement.KeepAlignAxis} and <code>best-fit</code>\nuses {@link qx.util.placement.BestFitAxis}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "placeMethod", "defaultValue": "\"mouse\"", "propertyType": "new", "possibleValues": "\"widget\",\"mouse\"", "isMixin": true, "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether the widget should be placed relative to an other widget or to\nthe mouse cursor.</p>"}, "type": "desc"}]}, {"attributes": {"name": "position", "defaultValue": "\"bottom-left\"", "propertyType": "new", "possibleValues": "\"top-left\",\"top-right\",\"bottom-left\",\"bottom-right\",\"left-top\",\"left-bottom\",\"right-top\",\"right-bottom\"", "isMixin": true, "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Position of the aligned object in relation to the opener.</p>\n\n<p>Please note than changes to this property are only applied\nwhen re-aligning the widget.</p>\n\n<p>The first part of the value is the edge to attach to. The second\npart the alignment of the orthogonal edge after the widget\nhas been attached.</p>\n\n<p>The default value &#8220;bottom-left&#8221; for example means that the\nwidget should be shown directly under the given target and\nthen should be aligned to be left edge:</p>\n\n<pre>\n+--------+\n| target |\n+--------+\n+-------------+\n|   widget    |\n+-------------+\n</pre>"}, "type": "desc"}]}]}]}