{"attributes": {"fullName": "qx.ui.core.MRemoteChildrenHandling", "packageName": "qx.ui.core", "type": "mixin", "name": "MRemoteChildrenHandling", "includer": "qx.ui.form.AbstractSelectBox,qx.ui.form.List,qx.ui.groupbox.GroupBox,qx.ui.toolbar.Part,qx.ui.container.SlideBar,qx.ui.window.Window"}, "type": "class", "children": [{"attributes": {"text": "<p>This mixin redirects all children handling methods to a child widget of the\nincluding class. This is e.g. used in {@link qx.ui.window.Window} to add\nchild widgets directly to the window pane.</p>\n\n<p>The including class must implement the method <code>getChildrenContainer</code>,\nwhich has to return the widget, to which the child widgets should be added.</p>"}, "type": "desc"}, {"type": "methods", "children": [{"attributes": {"isMixin": true, "name": "add"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "child"}, "type": "param", "children": [{"attributes": {"text": "<p>the item to add.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "LayoutItem"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional layout data for item.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a new child widget.</p>\n\n<p>The supported keys of the layout options map depend on the layout manager\nused to position the widget. The options are documented in the class\ndocumentation of each layout manager {@link qx.ui.layout}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>This object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Widget"}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "addAfter"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "child"}, "type": "param", "children": [{"attributes": {"text": "<p>item to add</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "LayoutItem"}, "type": "entry"}]}]}, {"attributes": {"name": "after"}, "type": "param", "children": [{"attributes": {"text": "<p>item, after which the new item will be inserted</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "LayoutItem"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional layout data for item.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Add a item after another already inserted item</p>\n\n<p>This method works on the widget&#8217;s children list. Some layout managers\n(e.g. {@link qx.ui.layout.HBox}) use the children order as additional\nlayout information. Other layout manager (e.g. {@link qx.ui.layout.Grid})\nignore the children order for the layout process.</p>"}, "type": "desc"}]}, {"attributes": {"isMixin": true, "name": "addAt"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "child"}, "type": "param", "children": [{"attributes": {"text": "<p>item to add</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "LayoutItem"}, "type": "entry"}]}]}, {"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>Index, at which the item will be inserted</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional layout data for item.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Add a child at the specified index</p>\n\n<p>This method works on the widget&#8217;s children list. Some layout managers\n(e.g. {@link qx.ui.layout.HBox}) use the children order as additional\nlayout information. Other layout manager (e.g. {@link qx.ui.layout.Grid})\nignore the children order for the layout process.</p>"}, "type": "desc"}]}, {"attributes": {"isMixin": true, "name": "addBefore"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "child"}, "type": "param", "children": [{"attributes": {"text": "<p>item to add</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "LayoutItem"}, "type": "entry"}]}]}, {"attributes": {"name": "before"}, "type": "param", "children": [{"attributes": {"text": "<p>item before the new item will be inserted.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "LayoutItem"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional layout data for item.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Add a item before another already inserted item</p>\n\n<p>This method works on the widget&#8217;s children list. Some layout managers\n(e.g. {@link qx.ui.layout.HBox}) use the children order as additional\nlayout information. Other layout manager (e.g. {@link qx.ui.layout.Grid})\nignore the children order for the layout process.</p>"}, "type": "desc"}]}, {"attributes": {"isMixin": true, "name": "getChildren"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the children list</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The children array (Arrays are\n  reference types, please to not modify them in-place)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "LayoutItem", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "hasChildren"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the widget contains children.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Returns <code>true</code> when the widget has children.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "indexOf"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "child"}, "type": "param", "children": [{"attributes": {"text": "<p>the item to query for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "LayoutItem"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the index position of the given item if it is\na child item. Otherwise it returns <code>-1</code>.</p>\n\n<p>This method works on the widget&#8217;s children list. Some layout managers\n(e.g. {@link qx.ui.layout.HBox}) use the children order as additional\nlayout information. Other layout manager (e.g. {@link qx.ui.layout.Grid})\nignore the children order for the layout process.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The index position or <code>-1</code> when\n  the given item is no child of this layout.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "remove"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "child"}, "type": "param", "children": [{"attributes": {"text": "<p>the item to remove</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "LayoutItem"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove the given child item.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>This object (for chaining support)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Widget"}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "removeAll"}, "type": "method", "children": [{"attributes": {"text": "<p>Remove all children.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"isMixin": true, "name": "removeAt"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>Index of the item to remove.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove the item at the specified index.</p>\n\n<p>This method works on the widget&#8217;s children list. Some layout managers\n(e.g. {@link qx.ui.layout.HBox}) use the children order as additional\nlayout information. Other layout manager (e.g. {@link qx.ui.layout.Grid})\nignore the children order for the layout process.</p>"}, "type": "desc"}]}]}]}