{"attributes": {"isAbstract": true, "name": "AbstractBox", "packageName": "qx.ui.decoration", "superClass": "qx.ui.decoration.Abstract", "childClasses": "qx.ui.decoration.HBox,qx.ui.decoration.VBox", "fullName": "qx.ui.decoration.AbstractBox", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>Abstract base class for the HBox and VBox decorators.</p>\n\n<p>This decorator uses three images, which are positioned in a vertical/horizontal\nline. The first and last image always keep their original size. The center\nimage is stretched.</p>"}, "type": "desc"}, {"type": "constructor", "children": [{"attributes": {"overriddenFrom": "qx.core.Object", "isCtor": true, "name": "ctor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "baseImage"}, "type": "param", "children": [{"attributes": {"text": "<p>Base image to use</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "insets"}, "type": "param", "children": [{"attributes": {"text": "<p>Insets for the grid</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}]}]}, {"type": "methods", "children": [{"attributes": {"access": "protected", "apply": "qx.ui.decoration.AbstractBox#baseImage", "name": "_applyBaseImage"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>baseImage</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyBaseImage}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.decoration.Abstract", "overriddenFrom": "qx.ui.decoration.Abstract", "name": "_getDefaultInsets"}, "type": "method"}, {"attributes": {"access": "protected", "docFrom": "qx.ui.decoration.Abstract", "overriddenFrom": "qx.ui.decoration.Abstract", "name": "_isInitialized"}, "type": "method"}, {"attributes": {"access": "protected", "name": "_setOrientation"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "orientation"}, "type": "param", "children": [{"attributes": {"text": "<p>horizontal or vertical</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper to set the orientation.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getBaseImage", "fromProperty": "baseImage"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>baseImage</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #baseImage}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>baseImage</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.decoration.IDecorator", "name": "getMarkup"}, "type": "method"}, {"attributes": {"access": "protected", "name": "initBaseImage", "fromProperty": "baseImage"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>baseImage</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>baseImage</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #baseImage}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetBaseImage", "fromProperty": "baseImage"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>baseImage</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #baseImage}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.decoration.IDecorator", "name": "resize"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param"}, {"attributes": {"name": "width"}, "type": "param"}, {"attributes": {"name": "height"}, "type": "param"}]}]}, {"attributes": {"name": "setBaseImage", "fromProperty": "baseImage"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>baseImage</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>baseImage</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #baseImage}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.decoration.IDecorator", "name": "tint"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param"}, {"attributes": {"name": "bgcolor"}, "type": "param"}]}]}]}, {"type": "properties", "children": [{"attributes": {"allowNull": "true", "apply": "_applyBaseImage", "check": "String", "name": "baseImage", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Base image <span class=\"caps\">URL</span>. All the different images needed are named by the default\nnaming scheme:</p>\n\n<p>${baseImageWithoutExtension}-${imageName}.${baseImageExtension}</p>\n\n<p>These image names are used:</p>\n\n<ul>\n<li>t: top side (vertical orientation)</li>\n<li>b: bottom side (vertical orientation)</li>\n</ul>\n\n<ul>\n<li>l: left side (horizontal orientation)</li>\n<li>r: right side (horizontal orientation)</li>\n</ul>\n\n<ul>\n<li>c: center image</li>\n</ul>"}, "type": "desc"}]}]}]}