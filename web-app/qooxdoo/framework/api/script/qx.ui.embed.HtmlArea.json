{"attributes": {"fullName": "qx.ui.embed.HtmlArea", "packageName": "qx.ui.embed", "type": "class", "name": "HtmlArea", "superClass": "qx.ui.core.Widget"}, "type": "class", "children": [{"attributes": {"text": "<p>Rich text editor widget which encapsulates the low-level {@link qx.bom.htmlarea.HtmlArea}\ncomponent to offer editing features.</p>\n\n<p>Optimized for the use at a <span class=\"caps\">RIA</span>.</p>"}, "type": "desc"}, {"type": "constructor", "children": [{"attributes": {"overriddenFrom": "qx.ui.core.Widget", "isCtor": true, "name": "ctor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial content</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "styleInformation"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional style information for the editor&#8217;s document\n                                              Can be a string or a map (example: { &#8220;p&#8221; : &#8220;padding:2px&#8221; }</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Map"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>source of the iframe</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Constructor</p>"}, "type": "desc"}]}]}, {"type": "events", "children": [{"attributes": {"name": "contextmenu"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is dispatched when the editor gets a right click.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "cursorContext"}, "type": "event", "children": [{"attributes": {"text": "<p>This event holds a data map which informs about the formatting at the\ncurrent cursor position. It holds the following keys:</p>\n\n<ul>\n<li>bold</li>\n<li>italic</li>\n<li>underline</li>\n<li>strikethrough</li>\n<li>fontSize</li>\n<li>fontFamily</li>\n<li>insertUnorderedList</li>\n<li>insertOrderedList</li>\n<li>justifyLeft</li>\n<li>justifyCenter</li>\n<li>justifyRight</li>\n<li>justifyFull</li>\n</ul>\n\n<p>This map can be used to control/update a toolbar states.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "focused"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is dispatched when the editor gets the focus and his own handling is done</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "focusOut"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is dispatched when the document receives an &#8220;focusout&#8221; event</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "loadingError"}, "type": "event", "children": [{"attributes": {"text": "<p>Thrown when the editor gets an error at loading time.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "messengerContent"}, "type": "event", "children": [{"attributes": {"text": "<p>Only available if messengerMode is active. This event returns the current content of the editor.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "ready"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is dispatched when the editor is ready to use</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "readyAfterInvalid"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is dispatched when the editor is ready to use after it was\nre-located and re-initialized. Only implemented for Gecko browsers.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "undoRedoState"}, "type": "event", "children": [{"attributes": {"text": "<p>Holds information about the state of undo/redo\nKeys are &#8220;undo&#8221; and &#8220;redo&#8221;.\nPossible values are 0 and -1 to stay in sync with\nthe kind the &#8220;cursorContext&#8221; event works.\n(1 = active/pressed, 0 = possible/not pressed, -1 = disabled)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"type": "methods-static", "children": [{"attributes": {"isStatic": true, "name": "isBlockNode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Node</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given node is a block node</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>whether it is a block node</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "isParagraphParent"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>node to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if one element is in the list of elements that are allowed to contain a paragraph in <span class=\"caps\">HTML</span></p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"type": "methods", "children": [{"attributes": {"access": "private", "name": "__addAppearListener"}, "type": "method", "children": [{"attributes": {"text": "<p>Adds the &#8220;appear&#8221; listener for correct startup</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__applyPostPonedProperties"}, "type": "method", "children": [{"attributes": {"text": "<p>Applies the postponed properties to the editor component</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__delegateDataEvent"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>event instance</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Clones the incoming data event and fires it at itself to let the application\ndevelopers listen to the widget instance.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__delegateEvent"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>event instance</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Clones the incoming event and fires it at itself to let the application\ndevelopers listen to the widget instance.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__setupDelegateListeners"}, "type": "method", "children": [{"attributes": {"text": "<p>Setup listeners for events of the low-level editing component and fires\nthem at the editing widget.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__setupEditorComponent"}, "type": "method", "children": [{"attributes": {"text": "<p>Setup the low-level editor component and the listener delegate methods.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__setupInvalidateListener"}, "type": "method", "children": [{"attributes": {"text": "<p>Listens to <span class=\"caps\">DOM</span> changes of the container element to get informed when the\nHtmlArea is moved to another container.</p>\n\n<p>This method is only implemented for Gecko browsers.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.embed.HtmlArea#contentType", "name": "_applyContentType"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>contentType</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyContentType}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.embed.HtmlArea#insertLinebreakOnCtrlEnter", "name": "_applyInsertLinebreakOnCtrlEnter"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>insertLinebreakOnCtrlEnter</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyInsertLinebreakOnCtrlEnter}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.embed.HtmlArea#insertParagraphOnLinebreak", "name": "_applyInsertParagraphOnLinebreak"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>insertParagraphOnLinebreak</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyInsertParagraphOnLinebreak}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.embed.HtmlArea#messengerMode", "name": "_applyMessengerMode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>messengerMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyMessengerMode}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.embed.HtmlArea#postProcess", "name": "_applyPostProcess"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>postProcess</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyPostProcess}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.embed.HtmlArea#useUndoRedo", "name": "_applyUseUndoRedo"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>useUndoRedo</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #_applyUseUndoRedo}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_createBlockerElement"}, "type": "method", "children": [{"attributes": {"text": "<p>Creates <div> element which is aligned over iframe node to avoid losing mouse events.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Blocker element node</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "block"}, "type": "method", "children": [{"attributes": {"text": "<p>Cover the iframe with a transparent blocker div element. This prevents\nmouse or key events to be handled by the iframe. To release the blocker\nuse {@link #release}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "clearSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Clears the current selection</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "containsOnlyPlaceholder"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper function to examine if HTMLArea is empty, except for\nplace holder(s) needed by some browsers.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>True, if area is empty &#8211; otherwise false.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "forceEditable"}, "type": "method", "children": [{"attributes": {"text": "<p>Forces the htmlArea to reset the document editable. This method can\nbe useful (especially for Gecko) whenever the HtmlArea was hidden and\ngets visible again.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getCommandManager"}, "type": "method", "children": [{"attributes": {"text": "<p>Getter for command manager.</p>"}, "type": "desc"}, {"attributes": {"defaultValue": "null"}, "type": "return", "children": [{"attributes": {"text": "<p>manager instance\nor null if the editor is not initialized</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "htmlarea.manager.Manager?htmlarea.manager.UndoManager"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getCompleteHtml"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the complete content of the editor</p>"}, "type": "desc"}, {"attributes": {"defaultValue": "null"}, "type": "return", "children": [{"attributes": {"text": "<p>complete content or null if the editor is not initialized</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getComputedValue"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "false", "name": "skipHtmlEncoding"}, "type": "param", "children": [{"attributes": {"text": "<p>whether the html encoding of text nodes should be skipped</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Getting the computed value of the editor.\nThis method returns the current value of the editor traversing\nthe elements below the body element. With this method you always\nget the current value, but it is much more expensive. So use it\ncarefully.</p>"}, "type": "desc"}, {"attributes": {"defaultValue": "null"}, "type": "return", "children": [{"attributes": {"text": "<p>computed value of the editor or null if the editor is not initialized</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getContentBody"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the body of the document</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getContentDocument"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the document of the iframe</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getContentType", "fromProperty": "contentType"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>contentType</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #contentType}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>contentType</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getContentWindow"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the body of the document</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getContextInformation"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the information about the current context (focusNode). It&#8217;s a\nmap with information about &#8220;bold&#8221;, &#8220;italic&#8221;, &#8220;underline&#8221;, etc.</p>"}, "type": "desc"}, {"attributes": {"defaultValue": "null"}, "type": "return", "children": [{"attributes": {"text": "<p>formatting information about the focusNode or null if not initialized</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getEditable"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the document is in editable mode</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getFocusNode"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the node where the selection ends</p>"}, "type": "desc"}, {"attributes": {"defaultValue": "null"}, "type": "return", "children": [{"attributes": {"text": "<p>focus node or null if not initialized</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getHtml"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "false", "name": "skipHtmlEncoding"}, "type": "param", "children": [{"attributes": {"text": "<p>whether the html encoding of text nodes should be skipped</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get html content (call own recursive method)</p>"}, "type": "desc"}, {"attributes": {"defaultValue": "null"}, "type": "return", "children": [{"attributes": {"text": "<p>current content of the editor as <span class=\"caps\">XHTML</span> or null if not initialized</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getIframeObject"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the iframe object which is used to render the content</p>"}, "type": "desc"}, {"attributes": {"defaultValue": "null"}, "type": "return", "children": [{"attributes": {"text": "<p>iframe <span class=\"caps\">DOM</span> element or null if the editor is not initialized</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Iframe"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getInsertLinebreakOnCtrlEnter", "fromProperty": "insertLinebreakOnCtrlEnter"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>insertLinebreakOnCtrlEnter</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertLinebreakOnCtrlEnter}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>insertLinebreakOnCtrlEnter</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getInsertParagraphOnLinebreak", "fromProperty": "insertParagraphOnLinebreak"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>insertParagraphOnLinebreak</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertParagraphOnLinebreak}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>insertParagraphOnLinebreak</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getMessengerMode", "fromProperty": "messengerMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>messengerMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #messengerMode}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>messengerMode</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getPostProcess", "fromProperty": "postProcess"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>postProcess</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #postProcess}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>postProcess</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getRange"}, "type": "method", "children": [{"attributes": {"text": "<p>returns the range of the current selection</p>"}, "type": "desc"}, {"attributes": {"defaultValue": "null"}, "type": "return", "children": [{"attributes": {"text": "<p>Range object or null if not initialized</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Range"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSavedRange"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the current stored range.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>range object or null</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Range"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSelectedHtml"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the content of the actual range as text</p>"}, "type": "desc"}, {"attributes": {"defaultValue": "null"}, "type": "return", "children": [{"attributes": {"text": "<p>selected text or null if not initialized</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSelectedText"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the currently selected text.</p>"}, "type": "desc"}, {"attributes": {"defaultValue": "null"}, "type": "return", "children": [{"attributes": {"text": "<p>Selected plain text or null if not initialized.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSelection"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the current selection object</p>"}, "type": "desc"}, {"attributes": {"defaultValue": "null"}, "type": "return", "children": [{"attributes": {"text": "<p>Selection object or null if not initialized.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Selection"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTextNodes"}, "type": "method", "children": [{"attributes": {"text": "<p>*** IN <span class=\"caps\">DEVELOPMENT</span>! ***\nReturns all text nodes</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Text nodes</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getUseUndoRedo", "fromProperty": "useUndoRedo"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>useUndoRedo</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #useUndoRedo}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>useUndoRedo</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getValue"}, "type": "method", "children": [{"attributes": {"text": "<p>Getting the value of the editor.\n<b>Attention</b>: The content of the editor is synced\nat focus/blur events, but not on every input. This method\nis not delivering the current content in a stable manner.\nTo get the current value of the editor use the {@link #getComputedValue}\nmethod instead.</p>"}, "type": "desc"}, {"attributes": {"defaultValue": "null"}, "type": "return", "children": [{"attributes": {"text": "<p>value of the editor or null if it&#8217;s not initialized</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getWords"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the node element where the text should be retrieved from.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns all the words that are contained in a node.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>all the words.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"name": "getWordsWithElement"}, "type": "method", "children": [{"attributes": {"text": "<p>*** IN <span class=\"caps\">DEVELOPMENT</span>! ***\nReturns all words</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>all words</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initContentType", "fromProperty": "contentType"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>contentType</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>contentType</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #contentType}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initInsertLinebreakOnCtrlEnter", "fromProperty": "insertLinebreakOnCtrlEnter"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>insertLinebreakOnCtrlEnter</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>insertLinebreakOnCtrlEnter</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #insertLinebreakOnCtrlEnter}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initInsertParagraphOnLinebreak", "fromProperty": "insertParagraphOnLinebreak"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>insertParagraphOnLinebreak</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>insertParagraphOnLinebreak</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #insertParagraphOnLinebreak}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initMessengerMode", "fromProperty": "messengerMode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>messengerMode</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>messengerMode</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #messengerMode}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initPostProcess", "fromProperty": "postProcess"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>postProcess</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>postProcess</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #postProcess}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initUseUndoRedo", "fromProperty": "useUndoRedo"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>useUndoRedo</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>useUndoRedo</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #useUndoRedo}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "insertHorizontalRuler"}, "type": "method", "children": [{"attributes": {"text": "<p>Inserts a horizontal ruler</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "insertHtml"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>html content</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts html content on the current selection</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "insertHyperLink"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">URL</span> for the image to be inserted</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts a hyperlink</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "insertImage"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "attributes"}, "type": "param", "children": [{"attributes": {"text": "<p>Map of <span class=\"caps\">HTML</span> attributes to apply</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert an image</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "insertIndent"}, "type": "method", "children": [{"attributes": {"text": "<p>Indents the current selection</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "insertOrderedList"}, "type": "method", "children": [{"attributes": {"text": "<p>Inserts an ordered list</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "insertOutdent"}, "type": "method", "children": [{"attributes": {"text": "<p>Outdents the current selection</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "insertUnorderedList"}, "type": "method", "children": [{"attributes": {"text": "<p>Inserts an unordered list</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isEditable"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the document is in editable mode</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isInsertLinebreakOnCtrlEnter", "fromProperty": "insertLinebreakOnCtrlEnter"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>insertLinebreakOnCtrlEnter</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertLinebreakOnCtrlEnter}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isInsertParagraphOnLinebreak", "fromProperty": "insertParagraphOnLinebreak"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>insertParagraphOnLinebreak</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertParagraphOnLinebreak}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isLoaded"}, "type": "method", "children": [{"attributes": {"text": "<p>Service method to check if the component is already loaded.\nOverrides the base method.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isMessengerMode", "fromProperty": "messengerMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>messengerMode</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #messengerMode}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isReady"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the editor is ready to accept commands etc.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>ready or not</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isUseUndoRedo", "fromProperty": "useUndoRedo"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>useUndoRedo</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #useUndoRedo}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "redo"}, "type": "method", "children": [{"attributes": {"text": "<p>Redo last undo</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "release"}, "type": "method", "children": [{"attributes": {"text": "<p>Release the blocker set by {@link #block}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "removeBackgroundColor"}, "type": "method", "children": [{"attributes": {"text": "<p>Alias for setBackgroundColor(&#8220;transparent&#8221;);</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>if succeeded</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "removeBackgroundImage"}, "type": "method", "children": [{"attributes": {"text": "<p>Alias for setBackgroundImage(null);</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>if succeeded</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "removeFormat"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes all formatting styles on the current selection content</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.core.LayoutItem", "overriddenFrom": "qx.ui.core.Widget", "name": "renderLayout"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "left"}, "type": "param"}, {"attributes": {"name": "top"}, "type": "param"}, {"attributes": {"name": "width"}, "type": "param"}, {"attributes": {"name": "height"}, "type": "param"}]}]}, {"attributes": {"name": "resetContentType", "fromProperty": "contentType"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>contentType</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #contentType}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetHtml"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the content of the editor</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetInsertLinebreakOnCtrlEnter", "fromProperty": "insertLinebreakOnCtrlEnter"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>insertLinebreakOnCtrlEnter</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #insertLinebreakOnCtrlEnter}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetInsertParagraphOnLinebreak", "fromProperty": "insertParagraphOnLinebreak"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>insertParagraphOnLinebreak</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #insertParagraphOnLinebreak}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetMessengerMode", "fromProperty": "messengerMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>messengerMode</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #messengerMode}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetPostProcess", "fromProperty": "postProcess"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>postProcess</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #postProcess}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetSavedRange"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the current saved range.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetUseUndoRedo", "fromProperty": "useUndoRedo"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>useUndoRedo</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #useUndoRedo}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "saveRange"}, "type": "method", "children": [{"attributes": {"text": "<p>Safes the current range to let the next command operate on this range.\nCurrently only interesting for IE browsers, since they loose the range /\nselection whenever an element is clicked which need to have a focus (e.g.\na textfield widget).</p>\n\n<p><strong><span class=\"caps\">NOTE</span>:</strong> the next executed command will reset this range.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "selectAll"}, "type": "method", "children": [{"attributes": {"text": "<p>Selects the whole content</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"overriddenFrom": "qx.ui.core.Widget", "name": "setBackgroundColor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>color</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the background color of the editor</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>if succeeded</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setBackgroundImage"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p>url of the background image to set</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "repeat"}, "type": "param", "children": [{"attributes": {"text": "<p>repeat mode. Possible values are &#8220;repeat|repeat-x|repeat-y|no-repeat&#8221;.\n                                    Default value is &#8220;no-repeat&#8221;</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "position"}, "type": "param", "children": [{"attributes": {"text": "<p>Position of the background image. Possible values are &#8221;|top|bottom|center|left|right|right top|left top|left bottom|right bottom&#8221;.\n                         Default value is &#8220;top&#8221;</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts an background image</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setBold"}, "type": "method", "children": [{"attributes": {"text": "<p>Sets the current selection content to bold font style</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setContentType", "fromProperty": "contentType"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>contentType</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>contentType</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #contentType}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setEditable"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>whether the component should be editable</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the document is in editable mode</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setFontFamily"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Font family</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the current selection content to the specified font family</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setFontSize"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Font size</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the current selection content to the specified font size</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setInsertLinebreakOnCtrlEnter", "fromProperty": "insertLinebreakOnCtrlEnter"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>insertLinebreakOnCtrlEnter</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>insertLinebreakOnCtrlEnter</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertLinebreakOnCtrlEnter}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setInsertParagraphOnLinebreak", "fromProperty": "insertParagraphOnLinebreak"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>insertParagraphOnLinebreak</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>insertParagraphOnLinebreak</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertParagraphOnLinebreak}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setItalic"}, "type": "method", "children": [{"attributes": {"text": "<p>Sets the current selection content to italic font style</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setJustifyCenter"}, "type": "method", "children": [{"attributes": {"text": "<p>Center-justifies the current selection</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setJustifyFull"}, "type": "method", "children": [{"attributes": {"text": "<p>Full-justifies the current selection</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setJustifyLeft"}, "type": "method", "children": [{"attributes": {"text": "<p>Left-justifies the current selection</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setJustifyRight"}, "type": "method", "children": [{"attributes": {"text": "<p>Right-justifies the current selection</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setMessengerMode", "fromProperty": "messengerMode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>messengerMode</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>messengerMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #messengerMode}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setPostProcess", "fromProperty": "postProcess"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>postProcess</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>postProcess</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #postProcess}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setStrikeThrough"}, "type": "method", "children": [{"attributes": {"text": "<p>Sets the current selection content to strikethrough font style</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setTextBackgroundColor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Color value (supported are Hex,</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the current selection content to the specified background color</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"overriddenFrom": "qx.ui.core.Widget", "name": "setTextColor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Color value (supported are Hex,</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the current selection content to the specified font color</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setUnderline"}, "type": "method", "children": [{"attributes": {"text": "<p>Sets the current selection content to underline font style</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setUseUndoRedo", "fromProperty": "useUndoRedo"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>useUndoRedo</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>useUndoRedo</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #useUndoRedo}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setValue"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new content to set</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Setting the value of the editor if it&#8217;s initialized</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleInsertLinebreakOnCtrlEnter", "fromProperty": "insertLinebreakOnCtrlEnter"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>insertLinebreakOnCtrlEnter</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertLinebreakOnCtrlEnter}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleInsertParagraphOnLinebreak", "fromProperty": "insertParagraphOnLinebreak"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>insertParagraphOnLinebreak</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertParagraphOnLinebreak}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleMessengerMode", "fromProperty": "messengerMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>messengerMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #messengerMode}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleUseUndoRedo", "fromProperty": "useUndoRedo"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>useUndoRedo</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #useUndoRedo}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "undo"}, "type": "method", "children": [{"attributes": {"text": "<p>Undo last operation</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}]}, {"type": "properties", "children": [{"attributes": {"refine": "true", "defaultValue": "\"htmlarea\"", "overriddenFrom": "qx.ui.core.Widget", "name": "appearance", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>appearance</p>"}, "type": "desc"}]}, {"attributes": {"check": "String", "apply": "_applyContentType", "defaultValue": "\"xhtml\"", "name": "contentType", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Selected content type. Currently only <span class=\"caps\">XHTML</span> is supported.</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "apply": "_applyInsertLinebreakOnCtrlEnter", "defaultValue": "true", "name": "insertLinebreakOnCtrlEnter", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>If true we add a linebreak after control+enter</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "apply": "_applyInsertParagraphOnLinebreak", "defaultValue": "true", "name": "insertParagraphOnLinebreak", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Toggles whether a p element is inserted on each line break or not.\nA &#8220;normal&#8221; linebreak can be achieved using the combination &#8220;Shift+Enter&#8221; anyway</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "apply": "_applyMessengerMode", "defaultValue": "false", "name": "messengerMode", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>If turned on the editor acts like a messenger widget e.g. if one hits the Enter key the current content gets\noutputted (via a DataEvent) and the editor clears his content</p>"}, "type": "desc"}]}, {"attributes": {"name": "postProcess", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_applyPostProcess", "check": "Function"}, "type": "property", "children": [{"attributes": {"text": "<p>Function to use in postprocessing html. See getHtml() and __getHtml().</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "apply": "_applyUseUndoRedo", "defaultValue": "true", "name": "useUndoRedo", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Toggles whether to use Undo/Redo</p>"}, "type": "desc"}]}]}]}