{"attributes": {"fullName": "qx.ui.table.IColumnMenuButton", "packageName": "qx.ui.table", "type": "interface", "name": "IColumnMenuButton", "implementations": "qx.ui.table.columnmenu.Button"}, "type": "class", "children": [{"attributes": {"text": "<p>Interface for creating the column visibility menu</p>"}, "type": "desc"}, {"type": "methods", "children": [{"attributes": {"name": "empty"}, "type": "method", "children": [{"attributes": {"text": "<p>Empty the menu of all items, in preparation for building a new column\nvisibility menu.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "Void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "factory"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "item"}, "type": "param", "children": [{"attributes": {"text": "<p>One of the following strings, indicating what type of\n  column-menu-specific object to instantiate:\n  <dl>\n    <dt>menu</dt>\n    <dd>\n      Instantiate a menu which will appear when the column visibility\n      button is pressed. No options are provided in this case.\n    </dd>\n    <dt>menu-button</dt>\n    <dd>\n      Instantiate a button to correspond to a column within the\n      table. The options are a map containing <i>text</i>, the name of\n      the column; <i>column</i>, the column number; and\n      <i>bVisible</i>, a boolean indicating whether this column is\n      currently visible. The instantiated return object must implement\n      interface {@link qx.ui.table.IColumnMenuItem}\n    </dd>\n    <dt>user-button</dt>\n    <dd>\n      Instantiate a button for other than a column name. This is used,\n      for example, to add the &#8220;Reset column widths&#8221; button when the\n      Resize column model is requested. The options is a map containing\n      <i>text</i>, the text to present in the button.\n    </dd>\n    <dt>separator</dt>\n    <dd>\n      Instantiate a separator object to added to the menu. This is\n      used, for example, to separate the table column name list from\n      the &#8220;Reset column widths&#8221; button when the Resize column model is\n      requested. No options are provided in this case.\n    </dd>\n  </dl></p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>Options specific to the <i>item</i> being requested.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Instantiate a sub-widget.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The instantiated object as specified by <i>item</i>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.ui.core.Widget"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getMenu", "fromProperty": "menu"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>menu</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #menu}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>menu</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initMenu", "fromProperty": "menu"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>menu</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>menu</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #menu}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetMenu", "fromProperty": "menu"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>menu</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #menu}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setMenu", "fromProperty": "menu"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>menu</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>menu</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #menu}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"type": "properties", "children": [{"attributes": {"name": "menu", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The menu which is displayed when this button is pressed.</p>"}, "type": "desc"}]}]}]}