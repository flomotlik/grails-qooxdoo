{"attributes": {"fullName": "qx.ui.virtual.layer.CellSpanManager", "packageName": "qx.ui.virtual.layer", "type": "class", "name": "CellSpanManager", "superClass": "qx.core.Object"}, "type": "class", "children": [{"attributes": {"text": "<p><span class=\"caps\">EXPERIMENTAL</span>!</p>\n\n<p>The CellSpanManager manages cells, which span several rows or columns.</p>\n\n<p>It provides functionality to compute, which spanning cells are visible\nin a given view port and how they have to be placed.</p>"}, "type": "desc"}, {"type": "constructor", "children": [{"attributes": {"overriddenFrom": "qx.core.Object", "isCtor": true, "name": "ctor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "rowConfig"}, "type": "param", "children": [{"attributes": {"text": "<p>The row configuration of the pane\n   in which the cells will be rendered</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.ui.virtual.core.Axis"}, "type": "entry"}]}]}, {"attributes": {"name": "columnConfig"}, "type": "param", "children": [{"attributes": {"text": "<p>The column configuration of the pane\n   in which the cells will be rendered</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.ui.virtual.core.Axis"}, "type": "entry"}]}]}]}]}]}, {"type": "methods", "children": [{"attributes": {"access": "private", "name": "__intersectionAsArray"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "setA"}, "type": "param", "children": [{"attributes": {"text": "<p>The first map</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "setB"}, "type": "param", "children": [{"attributes": {"text": "<p>The second map</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Return the intersection of two maps as an array. The objects intersect if\nthey have the same keys.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>An array keys found in both maps</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_findCellsInRange"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key to search for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "min"}, "type": "param", "children": [{"attributes": {"text": "<p>minimum value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "max"}, "type": "param", "children": [{"attributes": {"text": "<p>maximum value (inclusive)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Finds all cells with a sort key within the given range.</p>\n\n<p>Complexity: O(log n)</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Map, which will contain the search results</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_getColumnPosition"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The column index</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the pixel start position of the given column</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The pixel start position of the given column</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_getRowPosition"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The row index</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the pixel start position of the given row</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The pixel start position of the given row</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_getSingleCellBounds"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "cell"}, "type": "param", "children": [{"attributes": {"text": "<p>the cell description as returned by\n   {@link #findCellsInWindow} to get the bounds for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "firstVisibleRow"}, "type": "param", "children": [{"attributes": {"text": "<p>The pane&#8217;s first visible row</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "firstVisibleColumn"}, "type": "param", "children": [{"attributes": {"text": "<p>The pane&#8217;s first visible column</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the bounds of a single cell</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_getSortedCells"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The sort key. One of <code>firstRow</code>,\n    <code>lastRow</code>, <code>firstColumn</code> or <code>lastColumn</code></p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the cell array sorted by the given key (ascending)</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>sorted array of cell descriptions</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_invalidatePositionCache"}, "type": "method", "children": [{"attributes": {"text": "<p>Invalidates the row/column position cache</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_invalidateSortCache"}, "type": "method", "children": [{"attributes": {"text": "<p>Invalidate the sort cache</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_onColumnConfigChange"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>the event object</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for column configuration changes</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_onRowConfigChange"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>the event object</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for row configuration changes</p>"}, "type": "desc"}]}, {"attributes": {"name": "addCell"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>Unique id for the cell definition. This id is required\n   for removing the cell from the manager</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The cell&#8217;s row</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "PositiveInteger"}, "type": "entry"}]}]}, {"attributes": {"name": "column"}, "type": "param", "children": [{"attributes": {"text": "<p>The cell&#8217;s column</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "PositiveInteger"}, "type": "entry"}]}]}, {"attributes": {"name": "rowSpan"}, "type": "param", "children": [{"attributes": {"text": "<p>The number of rows the cells spans</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "PositiveInteger"}, "type": "entry"}]}]}, {"attributes": {"name": "columnSpan"}, "type": "param", "children": [{"attributes": {"text": "<p>The number of columns the cells spans</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "PositiveInteger"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Add a spanning cell to the manager.</p>"}, "type": "desc"}]}, {"attributes": {"name": "computeCellSpanMap"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "cells"}, "type": "param", "children": [{"attributes": {"text": "<p>Array of cell descriptions as returned by\n    {@link #findCellsInWindow}.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "firstRow"}, "type": "param", "children": [{"attributes": {"text": "<p>first visible row</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "PositiveInteger"}, "type": "entry"}]}]}, {"attributes": {"name": "firstColumn"}, "type": "param", "children": [{"attributes": {"text": "<p>first visible column</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "PositiveInteger"}, "type": "entry"}]}]}, {"attributes": {"name": "rowCount"}, "type": "param", "children": [{"attributes": {"text": "<p>number of rows in the window</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "PositiveInteger"}, "type": "entry"}]}]}, {"attributes": {"name": "columnCount"}, "type": "param", "children": [{"attributes": {"text": "<p>number of columns in the window</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "PositiveInteger"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Compute a bitmap, which marks for each visible cell, whether the cell\nis covered by a spanning cell.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Two dimensional array, which contains a <code>1</code>\n   for each visible cell, which is covered by a spanned cell.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map", "dimensions": 2}, "type": "entry"}]}]}]}, {"attributes": {"name": "findCellsInWindow"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "firstRow"}, "type": "param", "children": [{"attributes": {"text": "<p>first visible row</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "PositiveInteger"}, "type": "entry"}]}]}, {"attributes": {"name": "firstColumn"}, "type": "param", "children": [{"attributes": {"text": "<p>first visible column</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "PositiveInteger"}, "type": "entry"}]}]}, {"attributes": {"name": "rowCount"}, "type": "param", "children": [{"attributes": {"text": "<p>number of rows in the window</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "PositiveInteger"}, "type": "entry"}]}]}, {"attributes": {"name": "columnCount"}, "type": "param", "children": [{"attributes": {"text": "<p>number of columns in the window</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "PositiveInteger"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Find all cells, which are visible in the given grid window.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The array of found cell descriptions. A cell description\n   contains the keys <code>firstRow</code>, <code>lastRow</code>,\n   <code>firstColumn</code> or <code>lastColumn</code></p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"name": "getCellBounds"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "cells"}, "type": "param", "children": [{"attributes": {"text": "<p>Array of cell descriptions</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "firstVisibleRow"}, "type": "param", "children": [{"attributes": {"text": "<p>The pane&#8217;s first visible row</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "firstVisibleColumn"}, "type": "param", "children": [{"attributes": {"text": "<p>The pane&#8217;s first visible column</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the bounds of a list of cells as returned by {@link #findCellsInWindow}</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Array, which contains a bounds map for each cell.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"name": "removeCell"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>The id of the cell to remove</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove a cell from the manager</p>"}, "type": "desc"}]}]}]}