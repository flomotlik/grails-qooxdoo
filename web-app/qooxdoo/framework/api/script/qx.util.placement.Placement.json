{"attributes": {"fullName": "qx.util.placement.Placement", "packageName": "qx.util.placement", "type": "class", "name": "Placement", "superClass": "qx.core.Object"}, "type": "class", "children": [{"attributes": {"text": "<p>Contains methods to compute a position for any object which should\nbe positioned relative to another object.</p>"}, "type": "desc"}, {"type": "constructor", "children": [{"attributes": {"docFrom": "qx.core.Object", "overriddenFrom": "qx.core.Object", "isCtor": true, "name": "ctor"}, "type": "method"}]}, {"type": "methods", "children": [{"attributes": {"access": "private", "name": "__getPositionX"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the position value for the horizontal axis</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the position</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__getPositionY"}, "type": "method", "children": [{"attributes": {"text": "<p>Get the position value for the vertical axis</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the position</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"name": "compute"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "size"}, "type": "param", "children": [{"attributes": {"text": "<p>With the keys <code>width</code> and <code>height</code>\n  of the object to align</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "area"}, "type": "param", "children": [{"attributes": {"text": "<p>Available area to position the object. Has the keys\n  <code>width</code> and <code>height</code>. Normally this is the parent\n  object of the one to align.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Location of the object to align the object to. This map\n  should have the keys <code>left</code>, <code>top</code>, <code>right</code>\n  and <code>bottom</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "offsets"}, "type": "param", "children": [{"attributes": {"text": "<p>Map with all offsets for each direction.\n  Comes with the keys <code>left</code>, <code>top</code>,\n  <code>right</code> and <code>bottom</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p><span class=\"caps\">DOM</span> and widget independent method to compute the location\nof a object to make it relative to any other object.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>A map with the final location stored in the keys\n  <code>left</code> and <code>top</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getAlign", "fromProperty": "align"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>align</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #align}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>align</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getAxisX", "fromProperty": "axisX"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>axisX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #axisX}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>axisX</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getAxisY", "fromProperty": "axisY"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>axisY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #axisY}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>axisY</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getEdge", "fromProperty": "edge"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>edge</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #edge}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>edge</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initAlign", "fromProperty": "align"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>align</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>align</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #align}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initAxisX", "fromProperty": "axisX"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>axisX</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>axisX</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #axisX}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initAxisY", "fromProperty": "axisY"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>axisY</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>axisY</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #axisY}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initEdge", "fromProperty": "edge"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>edge</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>edge</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #edge}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetAlign", "fromProperty": "align"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>align</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #align}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetAxisX", "fromProperty": "axisX"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>axisX</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #axisX}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetAxisY", "fromProperty": "axisY"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>axisY</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #axisY}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetEdge", "fromProperty": "edge"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>edge</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #edge}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setAlign", "fromProperty": "align"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>align</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>align</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #align}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setAxisX", "fromProperty": "axisX"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>axisX</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>axisX</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #axisX}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setAxisY", "fromProperty": "axisY"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>axisY</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>axisY</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #axisY}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setEdge", "fromProperty": "edge"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>edge</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>edge</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #edge}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"type": "properties", "children": [{"attributes": {"possibleValues": "\"top\",\"right\",\"bottom\",\"left\"", "defaultValue": "\"right\"", "name": "align", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Specify with which edge of the target object, the object should be aligned</p>"}, "type": "desc"}]}, {"attributes": {"check": "qx.util.placement.AbstractAxis", "name": "axisX", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The axis object to use for the horizontal placement</p>"}, "type": "desc"}]}, {"attributes": {"check": "qx.util.placement.AbstractAxis", "name": "axisY", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The axis object to use for the vertical placement</p>"}, "type": "desc"}]}, {"attributes": {"possibleValues": "\"top\",\"right\",\"bottom\",\"left\"", "defaultValue": "\"top\"", "name": "edge", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Specify to which edge of the target object, the object should be attached</p>"}, "type": "desc"}]}]}, {"type": "methods-static", "children": [{"attributes": {"access": "private", "isStatic": true, "name": "__getAxis"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "mode"}, "type": "param", "children": [{"attributes": {"text": "<p>One of <code>direct</code>, <code>keep-align</code> or\n  <code>best-fit</code></p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the axis instance for the given mode</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "qx.util.placement.AbstractAxis"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "compute"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "size"}, "type": "param", "children": [{"attributes": {"text": "<p>With the keys <code>width</code> and <code>height</code>\n  of the object to align</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "area"}, "type": "param", "children": [{"attributes": {"text": "<p>Available area to position the object. Has the keys\n  <code>width</code> and <code>height</code>. Normally this is the parent\n  object of the one to align.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Location of the object to align the object to. This map\n  should have the keys <code>left</code>, <code>top</code>, <code>right</code>\n  and <code>bottom</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "offsets"}, "type": "param", "children": [{"attributes": {"text": "<p>Map with all offsets for each direction.\n  Comes with the keys <code>left</code>, <code>top</code>,\n  <code>right</code> and <code>bottom</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "position"}, "type": "param", "children": [{"attributes": {"text": "<p>Alignment of the object on the target, any of\n  &#8220;top-left&#8221;, &#8220;top-right&#8221;, &#8220;bottom-left&#8221;, &#8220;bottom-right&#8221;, &#8220;left-top&#8221;,\n  &#8220;left-bottom&#8221;, &#8220;right-top&#8221;, &#8220;right-bottom&#8221;.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "modeX"}, "type": "param", "children": [{"attributes": {"text": "<p>Horizontal placement mode. Valid values are:\n  <ul>\n  <li><code>direct</code>: place the object directly at the given\n  location.</li>\n  <li><code>keep-align</code>: if parts of the object is outside of the visible\n  area it is moved to the best fitting &#8216;edge&#8217; and &#8216;alignment&#8217; of the target.\n  It is guaranteed the the new position attaches the object to one of the\n  target edges and that that is aligned with a target edge.</li>\n  <li>best-fit</li>: If parts of the object are outside of the visible\n  area it is moved into the view port ignoring any offset, and position\n  values.\n  </ul></p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "modeY"}, "type": "param", "children": [{"attributes": {"text": "<p>Vertical placement mode. Accepts the same values as\n  the &#8216;modeX&#8217; argument.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p><span class=\"caps\">DOM</span> and widget independent method to compute the location\nof a object to make it relative to any other object.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>A map with the final location stored in the keys\n  <code>left</code> and <code>top</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}]}]}