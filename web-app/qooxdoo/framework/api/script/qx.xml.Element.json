{"attributes": {"fullName": "qx.xml.Element", "packageName": "qx.xml", "isStatic": true, "type": "class", "name": "Element"}, "type": "class", "children": [{"attributes": {"text": "<p>Cross browser <span class=\"caps\">XML</span> Element <span class=\"caps\">API</span></p>\n\n<p><a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/xmlsdk/html/81f3de54\u20133b79\u201346dc-8e01\u201373ca2d94cdb5.asp\">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/xmlsdk/html/81f3de54&#8211;3b79&#8211;46dc-8e01&#8211;73ca2d94cdb5.asp</a>\n<a href=\"http://developer.mozilla.org/en/docs/Parsing_and_serializing_XML\">http://developer.mozilla.org/en/docs/Parsing_and_serializing_XML</a></p>\n\n<p>Please note that nodes selected using the <code>selectSingleNode()</code> and\n<code>selectNodes()</code> methods remain in their document context so\n<code>qx.xml.Element.selectNodes(foo, &#8221;//bar&#8221;);</code>\nwill search the entire document for any nodes named &#8220;bar&#8221;, not just the\n<code>foo</code> node.</p>"}, "type": "desc"}, {"type": "methods-static", "children": [{"attributes": {"isStatic": true, "name": "getElementsByTagNameNS"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>the element from where the search should start.\n      Note that only the descendants of this element are included in the search, not the node itself.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}]}]}, {"attributes": {"name": "namespaceURI"}, "type": "param", "children": [{"attributes": {"text": "<p>is the namespace <span class=\"caps\">URI</span> of elements to look for . For example, if you need to look\n      for <span class=\"caps\">XHTML</span> elements, use the <span class=\"caps\">XHTML</span> namespace <span class=\"caps\">URI</span>, <tt><a href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</a></tt>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "tagname"}, "type": "param", "children": [{"attributes": {"text": "<p>the tagname to look for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a list of elements with the given tag name belonging to the given namespace (<a href=\"http://developer.mozilla.org/en/docs/DOM:element.getElementsByTagNameNS\">http://developer.mozilla.org/en/docs/DOM:element.getElementsByTagNameNS</a>).</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>a list of found elements in the order they appear in the tree.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getSingleNodeText"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>root element for the search</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}]}]}, {"attributes": {"name": "query"}, "type": "param", "children": [{"attributes": {"text": "<p>XPath query</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Selects the first XmlNode that matches the XPath expression and returns the text content of the element</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the joined text content of the found element or null if not appropriate.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "selectNodes"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>root element for the search</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}]}]}, {"attributes": {"name": "query"}, "type": "param", "children": [{"attributes": {"text": "<p>XPath query</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "namespaces"}, "type": "param", "children": [{"attributes": {"text": "<p>optional map of prefixes and their namespace URIs</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Selects a list of nodes matching the XPath expression.</p>\n\n<p>Note: XPath queries containing namespace prefixes won&#8217;t work in\nChromium-based browsers until Chromium bug #671<sup class=\"footnote\"><a href=\"#fn1\">1</a></sup> is fixed. Opera\nversions < 9.52 do not seem to support namespaces in XPath queries at\nall.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>List of matching elements</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "selectSingleNode"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>root element for the search</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}]}]}, {"attributes": {"name": "query"}, "type": "param", "children": [{"attributes": {"text": "<p>XPath query</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "namespaces"}, "type": "param", "children": [{"attributes": {"text": "<p>optional map of prefixes and their namespace URIs</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Selects the first XmlNode that matches the XPath expression.</p>\n\n<p>Note: XPath queries containing namespace prefixes won&#8217;t work in\nChromium-based browsers until Chromium bug #671<sup class=\"footnote\"><a href=\"#fn1\">1</a></sup> is fixed. Opera\nversions < 9.52 do not seem to support namespaces in XPath queries at\nall.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>first matching element</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "serialize"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>The root of the subtree to be serialized. This could be any node, including a Document.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>The subtree rooted by the specified element or document is serialized to a string.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Serialized subtree</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}]}]}